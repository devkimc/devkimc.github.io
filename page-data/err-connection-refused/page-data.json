{"componentChunkName":"component---src-templates-blog-template-js","path":"/err-connection-refused/","result":{"data":{"cur":{"id":"e1f09876-14d1-5947-bf9d-7380f8a0f0cf","html":"<p><img src=\"https://velog.velcdn.com/images/kws60000/post/f460a774-e0fa-493d-8654-7f762abcb847/image.png\" alt=\"\"></p>\n<h2 id=\"에러-배경\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD\" aria-label=\"에러 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 배경</h2>\n<ol>\n<li>\n<p>node js 를 AWS 서버 에 배포했다.</p>\n</li>\n<li>\n<p>웹 화면에서 api 요청 시 ‘사이트에 연결할 수 없음’ 에러 확인</p>\n</li>\n</ol>\n<p>​</p>\n<h2 id=\"에러-발생-이유\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%9C%A0\" aria-label=\"에러 발생 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 발생 이유</h2>\n<ul>\n<li>\n<p>방화벽이 원인이었다.</p>\n</li>\n<li>\n<p>http 프로토콜과 포트를 열어주지 않아서 응답을 주지 않았다.</p>\n</li>\n</ul>\n<p>​</p>\n<h2 id=\"에러-해결-과정\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\" aria-label=\"에러 해결 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 해결 과정</h2>\n<h3 id=\"1-aws-인바운드-규칙-확인\" style=\"position:relative;\"><a href=\"#1-aws-%EC%9D%B8%EB%B0%94%EC%9A%B4%EB%93%9C-%EA%B7%9C%EC%B9%99-%ED%99%95%EC%9D%B8\" aria-label=\"1 aws 인바운드 규칙 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. AWS 인바운드 규칙 확인</h3>\n<ul>\n<li>Instance 의 보안 그룹에 대한 포트를 열어줬는지 확인한다.</li>\n</ul>\n<p>​</p>\n<h3 id=\"2-해당-포트가-실행되는-지-확인\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EB%8B%B9-%ED%8F%AC%ED%8A%B8%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EC%A7%80-%ED%99%95%EC%9D%B8\" aria-label=\"2 해당 포트가 실행되는 지 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해당 포트가 실행되는 지 확인</h3>\n<ul>\n<li>\n<p>netstat -tnlp</p>\n</li>\n<li>\n<p>해당 포트가 실행되는 지 알 수 있다.</p>\n</li>\n</ul>\n<p>​</p>\n<h3 id=\"3-방화벽-허용하기\" style=\"position:relative;\"><a href=\"#3-%EB%B0%A9%ED%99%94%EB%B2%BD-%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"3 방화벽 허용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 방화벽 허용하기</h3>\n<ul>\n<li>\n<p>firewall-cmd —permanent —add-service=http</p>\n</li>\n<li>\n<p>firewall-cmd —permanent —add-service=https</p>\n</li>\n<li>\n<p>firewall-cmd —permanent —add-port=9000/tcp</p>\n</li>\n</ul>\n<p>​</p>\n<ul>\n<li>\n<p>과거에 허용한 적이 없다면 success</p>\n</li>\n<li>\n<p>과거에 허용한 적이 있다면 경고가 뜬다.</p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD\">에러 배경</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%9C%A0\">에러 발생 이유</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\">에러 해결 과정</a></p>\n<ul>\n<li><a href=\"#1-aws-%EC%9D%B8%EB%B0%94%EC%9A%B4%EB%93%9C-%EA%B7%9C%EC%B9%99-%ED%99%95%EC%9D%B8\">1. AWS 인바운드 규칙 확인</a></li>\n<li><a href=\"#2-%ED%95%B4%EB%8B%B9-%ED%8F%AC%ED%8A%B8%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EC%A7%80-%ED%99%95%EC%9D%B8\">2. 해당 포트가 실행되는 지 확인</a></li>\n<li><a href=\"#3-%EB%B0%A9%ED%99%94%EB%B2%BD-%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0\">3. 방화벽 허용하기</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"에러 배경 node js 를 AWS 서버 에 배포했다. 웹 화면에서 api 요청 시 ‘사이트에 연결할 수 없음’ 에러 확인 ​ 에러 발생 이유 방화벽이 원인이었다. http 프로토콜과 포트를 열어주지 않아서 응답을 주지 않았다. ​ 에러 해결 과정 1. AWS 인바운드 규칙 확인 Instance 의 보안 그룹에 대한 포트를 열어줬는지 확인한다. ​ 2. 해당 포트가 실행되는 지 확인 netstat -tnlp 해당 포트가 실행되는 지 알 수 있다. ​ 3. 방화벽 허용하기 firewall-cmd —permanent —add-service=http firewall-cmd —permanent —add-service=https firewall-cmd —permanent —add-port=9000/tcp ​ 과거에 허용한 적이 없다면 success 과거에 허용한 적이 있다면 경고가 뜬다. 에러 배경 에러 발생 이유 에러 해결 과정 1. AWS 인바운드 규칙 확인 2. 해당 포트가 실행되는 …","frontmatter":{"date":"August 04, 2022","title":"AWS EC2 Node.js 서버 연결 안될 때 ( 사이트에 연결할 수 없음 )","categories":"블로그 server","author":"devkimc","emoji":"💻"},"fields":{"slug":"/err-connection-refused/"}},"next":{"id":"62287063-6f02-5d40-bad7-0fbf19df2de0","html":"<p>많은 웹 프론트엔드 개발자가 React, vue, angular 프레임워크를 사용하여 개발한다.\n이들은 모두 SPA 프레임워크이다. 그런데 SPA는 뭘까?\nSPA를 설명하기 앞서, SPA는 모던 웹의 패러다임이라고 한다.\n과거 웹 페이지에 대비해 어떠한 목적으로 SPA를 사용하기 시작한 지 알아봤다.</p>\n<h2 id=\"1-서버의-부하-감소\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%B2%84%EC%9D%98-%EB%B6%80%ED%95%98-%EA%B0%90%EC%86%8C\" aria-label=\"1 서버의 부하 감소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 서버의 부하 감소</h2>\n<p>과거의 웹 페이지 형태(MPA, Multi Page Application)에서는 사용자가 메뉴를 클릭 시,\n완전히 새로운 페이지를 서버에서 전송해 줬다.\n서버에서 다음과 같은 작업이 이루어졌다.</p>\n<ol>\n<li>사용자에게 요청이 들어오면, DB로부터 데이터를 가져온다.</li>\n<li>ASP, JSP, PHP 같은 파일에 데이터를 넣어준 후 HTML 형태화 시켜서 전송해 준다.\n​</li>\n</ol>\n<p>과거의 웹 페이지에서 브라우저는 화면을 보여주기만 할 뿐,\n요청한 웹 문서에 대한 처리는 전부 서버에서 담당한 것으로 보인다.\n<strong>즉, 페이지가 요청될 때마다 서버에 부하가 생긴다.</strong>\n​\nSPA는 웹 애플리케이션에 필요한 정적 리소스(Html, Css, Javascript)를 최초 접근 시 단 한 번만 다운로드한다.\n<strong>서버는 브라우저에서 필요한 정보에 대한 요청(Ajax)이 오면 응답(Json)만 주면 된다.</strong>\n따라서 MPA와 달리 SPA 방식은 서버에 부하를 줄일 수 있게 된다.</p>\n<p>​</p>\n<h2 id=\"2-모바일-최적화\" style=\"position:relative;\"><a href=\"#2-%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"2 모바일 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 모바일 최적화</h2>\n<p>온라인 세상에서 <strong>모바일의 중요성이 커지면서 모바일 최적화에 대한 니즈를 충족시키기 위해 등장했다.</strong>\nSPA는 크롬, 브라우저와 같은 브라우저를 통해 사용하는 웹 앱(모바일 웹)을,\n다운로드해 사용하는 네이티브 앱(모바일 앱) 같은 퍼포먼스를 향상시킨다.\n​\n모바일 웹이 MPA 방식으로 구현됐다면,\n수많은 페이지를 이동할 때, 페이지를 리렌더링 해야 하므로 사용자 경험(UX)이 감소할 것이다.\nSPA에서는 수정된 부분만 렌더링 하기 때문에, 기존의 웹 페이지보다 UX가 향상된다.\n​\n그렇다면 SPA는 장점만 있는 것일까?\n역시나 단점이 존재하고, 상황에 맞게 CSR, SSR 렌더링 방식을 선택하는 것이 좋다.</p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/6c208b29-d00b-4f14-9cf6-04c1d90f5b7f/image.jpg\" alt=\"\"></p>\n<p>​\n모바일 웹이 MPA 방식으로 구현됐다면,\n수많은 페이지를 이동할 때, 페이지를 리렌더링 해야 하므로 사용자 경험(UX)이 감소할 것이다.\n<strong>SPA에서는 수정된 부분만 렌더링 하기 때문에, 기존의 웹 페이지보다 UX가 향상된다.</strong></p>\n<p>​\n그렇다면 SPA는 장점만 있는 것일까?\n역시나 단점이 존재하고, 상황에 맞게 CSR, SSR 렌더링 방식을 선택하는 것이 좋다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%EC%84%9C%EB%B2%84%EC%9D%98-%EB%B6%80%ED%95%98-%EA%B0%90%EC%86%8C\">1. 서버의 부하 감소</a></li>\n<li><a href=\"#2-%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\">2. 모바일 최적화</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 01, 2022","title":"SPA(Single Page Application) - [1] 등장 배경","categories":"블로그 web","author":"devkimc","emoji":"📓"},"fields":{"slug":"/single-page-application-1/"}},"prev":{"id":"26d667eb-e403-5729-91e2-f7c70f6449d8","html":"<p><img src=\"https://velog.velcdn.com/images/kws60000/post/975ddce2-0d9c-44e9-aee3-683fea8cc157/image.png\" alt=\"\"></p>\n<p>안녕하세요.\n이번 게시물은 이전 게시물 [SPA - 등장 배경]의 다음 편입니다.\n이전 게시물에서는 SPA가 등장한 배경, MPA와 차이점을 소개했습니다.</p>\n<p><strong>SPA는 하나의 페이지를 서버로부터 받아와 브라우저에서 렌더링을 하며 내용을 채웁니다.</strong>\n이는 CSR과 궁합이 맞으며, 실제로 SPA + CSR로 많이 사용됩니다.\n반면 <strong>MPA는 문서에 대한 처리를 서버에서 전적으로 하므로, SSR과 궁합이 맞습니다.</strong></p>\n<p>따라서, 이번 게시물에서는 SPA/MPA 원리와 연관이 있는 CSR/SSR에 대해 소개하려 합니다.</p>\n<br />\n<h2 id=\"csrclient-side-rendering\" style=\"position:relative;\"><a href=\"#csrclient-side-rendering\" aria-label=\"csrclient side rendering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>﻿CSR(Client Side Rendering)</h2>\n<ol>\n<li>클라이언트에서 렌더링을 하는 것</li>\n<li>클라이언트는 빈 껍데기의 index.html을 받고, 추가로 서버로부터 js 파일을 다운로드합니다.</li>\n<li>추가로 필요한 데이터는 서버에 요청해서 데이터를 받은 다음에 동적으로 html을 생성합니다.</li>\n</ol>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ol>\n<li>페이지를 전환하는 과정에서 링크로 이동하는 것이기 아니기 때문에 깜빡임이 없으므로 사용자 친화적이다.</li>\n<li>서버의 부하가 덜하다.</li>\n</ol>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ol>\n<li>초기 화면 접근 시 다운로드하는 js 파일의 용량이 크기 때문에 로딩이 오래 거릴 수 있다.</li>\n<li>SEO(Search Engine Optimization): Googlle, Naver 등 검색 사이트는 웹사이트를 돌아다니면서 각 웹사이트의 HTML의 내용을 분석 후 검색엔진에 등록한다. 그런데 CSR의 경우 index.html의 body가 빈 껍데기이므로, 검색엔진이 분석하는데 어려움이 있습니다.</li>\n</ol>\n<br />\n<h2 id=\"ssrserver-side-rendering\" style=\"position:relative;\"><a href=\"#ssrserver-side-rendering\" aria-label=\"ssrserver side rendering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR(Server Side Rendering)</h2>\n<ol>\n<li>서버에서 렌더링을 하는 것</li>\n<li>서버에서 필요한 정보를 가지고 Html 파일을 만들게 되고, 동적으로 제어할 수 있는 js 파일을 클라이언트에게 보내줍니다.</li>\n<li>클라이언트는 잘 만들어진 문서를 받아서 사용자에게 보여주게 됩니다.</li>\n</ol>\n<h3 id=\"장점-1\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90-1\" aria-label=\"장점 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ol>\n<li>첫 번째 페이지 로딩이 빨라진다.</li>\n<li>CSR 과 달리 모든 컨텐츠가 Html에 담겨 있기 때문에 조금 더 효율적인 SEO를 할 수 있다.</li>\n</ol>\n<h3 id=\"단점-1\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90-1\" aria-label=\"단점 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ol>\n<li>사용자가 링크를 클릭하면 페이지에 대한 정보 전체를 다시 받아오기 때문에 좋지 않은 사용자 경험(UX)을 겪을 수 있습니다.</li>\n<li>사용자가 클릭할 때마다 서버에서 필요한 데이터를 가지고 Html을 만들어야 하므로 서버에 과부하가 걸리기 쉽습니다.</li>\n<li>사용자가 빠르게 웹 사이트를 확인할 수는 있지만, 동적으로 데이터를 처리하는 js 파일을 이어서 다운로드할 때까지 대기시간이 생깁니다. 예를 들어 화면에 로그인 버튼은 있는데 클릭을 해도 반응이 없는 경우가 발생할 수 있습니다. 아래 그림과 추가 설명을 보면 이해하는 데 도움이 됩니다.</li>\n</ol>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/482f0173-b984-4066-bc08-3bbe8204f785/image.png\" alt=\"\"></p>\n<h2 id=\"ttv와-tti-측면에서-비교-그림-추가-설명-\" style=\"position:relative;\"><a href=\"#ttv%EC%99%80-tti-%EC%B8%A1%EB%A9%B4%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%A6%BC-%EC%B6%94%EA%B0%80-%EC%84%A4%EB%AA%85-\" aria-label=\"ttv와 tti 측면에서 비교 그림 추가 설명  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TTV와 TTI 측면에서 비교( 그림 추가 설명 )</h2>\n<h3 id=\"csr\" style=\"position:relative;\"><a href=\"#csr\" aria-label=\"csr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSR</h3>\n<ol>\n<li>사이트에 접속하면 서버에서 비어있는 index.html을 받습니다. 이때, 사용자는 빈 화면을 보게 됩니다.</li>\n<li>이후 JS를 로드해서 사용자가 최종적으로 동적으로 Html을 생성할 수 있고, 웹 애플리케이션 로직이 담긴 js 파일을 받아오게 됩니다.</li>\n<li>이 순간부터 웹사이트는 사용자에게 보이고, 동작도 가능하게 됩니다.</li>\n</ol>\n<ul>\n<li><strong>TTV와 TTI가 거의 일치하게 됨</strong></li>\n</ul>\n<h3 id=\"ssr\" style=\"position:relative;\"><a href=\"#ssr\" aria-label=\"ssr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR</h3>\n<ol>\n<li>사이트에 접속하면 서버로부터 내용이 담긴 index.html을 받습니다. 이때, 사용자는 웹 사이트 화면을 볼 수 있습니다. 하지만 아직 Html을 동적으로 변환할 수 있는 js 파일을 받아오지 않았으므로, 사용자가 클릭을 해도 동작을 하지 않습니다.</li>\n<li>최종적으로 js 파일을 서버에서 받은 후부터 클릭을 처리할 수 있는 인터랙션이 가능해집니다.</li>\n</ol>\n<ul>\n<li><strong>사용자가 사이트를 볼 수 있는 시간(TTV)과 실제로 인터랙션 할 수 있는 시간(TTI)의 공백이 긴 편</strong></li>\n</ul>\n<h3 id=\"용어-설명\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4-%EC%84%A4%EB%AA%85\" aria-label=\"용어 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어 설명</h3>\n<ul>\n<li>TTV(Time To View): 사용자가 사이트를 볼 수 있을 때까지 걸리는 시간</li>\n<li>TTI(Time To Interact): 사용자가 인터랙션이 가능할 때까지 걸리는 시간</li>\n<li>인터랙션(Interaction): 전반적인 상호작용\n(ex. 사용자가 버튼을 클릭했을 때 팝업이 뜸, 검색창에 입력했을 때 데이터가 화면에 보임 등)</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#csrclient-side-rendering\">﻿CSR(Client Side Rendering)</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#ssrserver-side-rendering\">SSR(Server Side Rendering)</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90-1\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90-1\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#ttv%EC%99%80-tti-%EC%B8%A1%EB%A9%B4%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%A6%BC-%EC%B6%94%EA%B0%80-%EC%84%A4%EB%AA%85-\">TTV와 TTI 측면에서 비교( 그림 추가 설명 )</a></p>\n<ul>\n<li><a href=\"#csr\">CSR</a></li>\n<li><a href=\"#ssr\">SSR</a></li>\n<li><a href=\"#%EC%9A%A9%EC%96%B4-%EC%84%A4%EB%AA%85\">용어 설명</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 04, 2022","title":"SPA(Single Page Application) - [2] CSR/SSR","categories":"블로그 web","author":"devkimc","emoji":"📓"},"fields":{"slug":"/single-page-application-2/"}},"site":{"siteMetadata":{"siteUrl":"https://devkimc.github.io","comments":{"utterances":{"repo":"devkimc/devkimc.github.io"}}}}},"pageContext":{"slug":"/err-connection-refused/","nextSlug":"/single-page-application-1/","prevSlug":"/single-page-application-2/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}