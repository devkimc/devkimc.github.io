{"componentChunkName":"component---src-templates-blog-template-js","path":"/err-connection-refused/","result":{"data":{"cur":{"id":"e1f09876-14d1-5947-bf9d-7380f8a0f0cf","html":"<p><img src=\"https://velog.velcdn.com/images/kws60000/post/f460a774-e0fa-493d-8654-7f762abcb847/image.png\" alt=\"\"></p>\n<h2 id=\"에러-배경\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD\" aria-label=\"에러 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 배경</h2>\n<ol>\n<li>\n<p>node js 를 AWS 서버 에 배포했다.</p>\n</li>\n<li>\n<p>웹 화면에서 api 요청 시 ‘사이트에 연결할 수 없음’ 에러 확인</p>\n</li>\n</ol>\n<p>​</p>\n<h2 id=\"에러-발생-이유\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%9C%A0\" aria-label=\"에러 발생 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 발생 이유</h2>\n<ul>\n<li>\n<p>방화벽이 원인이었다.</p>\n</li>\n<li>\n<p>http 프로토콜과 포트를 열어주지 않아서 응답을 주지 않았다.</p>\n</li>\n</ul>\n<p>​</p>\n<h2 id=\"에러-해결-과정\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\" aria-label=\"에러 해결 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 해결 과정</h2>\n<h3 id=\"1-aws-인바운드-규칙-확인\" style=\"position:relative;\"><a href=\"#1-aws-%EC%9D%B8%EB%B0%94%EC%9A%B4%EB%93%9C-%EA%B7%9C%EC%B9%99-%ED%99%95%EC%9D%B8\" aria-label=\"1 aws 인바운드 규칙 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. AWS 인바운드 규칙 확인</h3>\n<ul>\n<li>Instance 의 보안 그룹에 대한 포트를 열어줬는지 확인한다.</li>\n</ul>\n<p>​</p>\n<h3 id=\"2-해당-포트가-실행되는-지-확인\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EB%8B%B9-%ED%8F%AC%ED%8A%B8%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EC%A7%80-%ED%99%95%EC%9D%B8\" aria-label=\"2 해당 포트가 실행되는 지 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해당 포트가 실행되는 지 확인</h3>\n<ul>\n<li>\n<p>netstat -tnlp</p>\n</li>\n<li>\n<p>해당 포트가 실행되는 지 알 수 있다.</p>\n</li>\n</ul>\n<p>​</p>\n<h3 id=\"3-방화벽-허용하기\" style=\"position:relative;\"><a href=\"#3-%EB%B0%A9%ED%99%94%EB%B2%BD-%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"3 방화벽 허용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 방화벽 허용하기</h3>\n<ul>\n<li>\n<p>firewall-cmd —permanent —add-service=http</p>\n</li>\n<li>\n<p>firewall-cmd —permanent —add-service=https</p>\n</li>\n<li>\n<p>firewall-cmd —permanent —add-port=9000/tcp</p>\n</li>\n</ul>\n<p>​</p>\n<ul>\n<li>\n<p>과거에 허용한 적이 없다면 success</p>\n</li>\n<li>\n<p>과거에 허용한 적이 있다면 경고가 뜬다.</p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD\">에러 배경</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%9C%A0\">에러 발생 이유</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\">에러 해결 과정</a></p>\n<ul>\n<li><a href=\"#1-aws-%EC%9D%B8%EB%B0%94%EC%9A%B4%EB%93%9C-%EA%B7%9C%EC%B9%99-%ED%99%95%EC%9D%B8\">1. AWS 인바운드 규칙 확인</a></li>\n<li><a href=\"#2-%ED%95%B4%EB%8B%B9-%ED%8F%AC%ED%8A%B8%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EC%A7%80-%ED%99%95%EC%9D%B8\">2. 해당 포트가 실행되는 지 확인</a></li>\n<li><a href=\"#3-%EB%B0%A9%ED%99%94%EB%B2%BD-%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0\">3. 방화벽 허용하기</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"에러 배경 node js 를 AWS 서버 에 배포했다. 웹 화면에서 api 요청 시 ‘사이트에 연결할 수 없음’ 에러 확인 ​ 에러 발생 이유 방화벽이 원인이었다. http 프로토콜과 포트를 열어주지 않아서 응답을 주지 않았다. ​ 에러 해결 과정 1. AWS 인바운드 규칙 확인 Instance 의 보안 그룹에 대한 포트를 열어줬는지 확인한다. ​ 2. 해당 포트가 실행되는 지 확인 netstat -tnlp 해당 포트가 실행되는 지 알 수 있다. ​ 3. 방화벽 허용하기 firewall-cmd —permanent —add-service=http firewall-cmd —permanent —add-service=https firewall-cmd —permanent —add-port=9000/tcp ​ 과거에 허용한 적이 없다면 success 과거에 허용한 적이 있다면 경고가 뜬다. 에러 배경 에러 발생 이유 에러 해결 과정 1. AWS 인바운드 규칙 확인 2. 해당 포트가 실행되는 …","frontmatter":{"date":"August 04, 2022","title":"AWS EC2 Node.js 서버 연결 안될 때 ( 사이트에 연결할 수 없음 )","categories":"블로그 server","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/err-connection-refused/"}},"next":{"id":"62287063-6f02-5d40-bad7-0fbf19df2de0","html":"<p>많은 웹 프론트엔드 개발자가 React, vue, angular 프레임워크를 사용하여 개발한다.\n이들은 모두 SPA 프레임워크이다. 그런데 SPA는 뭘까?\nSPA를 설명하기 앞서, SPA는 모던 웹의 패러다임이라고 한다.\n과거 웹 페이지에 대비해 어떠한 목적으로 SPA를 사용하기 시작한 지 알아봤다.</p>\n<h2 id=\"1-서버의-부하-감소\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%B2%84%EC%9D%98-%EB%B6%80%ED%95%98-%EA%B0%90%EC%86%8C\" aria-label=\"1 서버의 부하 감소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 서버의 부하 감소</h2>\n<p>과거의 웹 페이지 형태(MPA, Multi Page Application)에서는 사용자가 메뉴를 클릭 시,\n완전히 새로운 페이지를 서버에서 전송해 줬다.\n서버에서 다음과 같은 작업이 이루어졌다.</p>\n<ol>\n<li>사용자에게 요청이 들어오면, DB로부터 데이터를 가져온다.</li>\n<li>ASP, JSP, PHP 같은 파일에 데이터를 넣어준 후 HTML 형태화 시켜서 전송해 준다.\n​</li>\n</ol>\n<p>과거의 웹 페이지에서 브라우저는 화면을 보여주기만 할 뿐,\n요청한 웹 문서에 대한 처리는 전부 서버에서 담당한 것으로 보인다.\n<strong>즉, 페이지가 요청될 때마다 서버에 부하가 생긴다.</strong>\n​\nSPA는 웹 애플리케이션에 필요한 정적 리소스(Html, Css, Javascript)를 최초 접근 시 단 한 번만 다운로드한다.\n<strong>서버는 브라우저에서 필요한 정보에 대한 요청(Ajax)이 오면 응답(Json)만 주면 된다.</strong>\n따라서 MPA와 달리 SPA 방식은 서버에 부하를 줄일 수 있게 된다.</p>\n<p>​</p>\n<h2 id=\"2-모바일-최적화\" style=\"position:relative;\"><a href=\"#2-%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"2 모바일 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 모바일 최적화</h2>\n<p>온라인 세상에서 <strong>모바일의 중요성이 커지면서 모바일 최적화에 대한 니즈를 충족시키기 위해 등장했다.</strong>\nSPA는 크롬, 브라우저와 같은 브라우저를 통해 사용하는 웹 앱(모바일 웹)을,\n다운로드해 사용하는 네이티브 앱(모바일 앱) 같은 퍼포먼스를 향상시킨다.\n​\n모바일 웹이 MPA 방식으로 구현됐다면,\n수많은 페이지를 이동할 때, 페이지를 리렌더링 해야 하므로 사용자 경험(UX)이 감소할 것이다.\nSPA에서는 수정된 부분만 렌더링 하기 때문에, 기존의 웹 페이지보다 UX가 향상된다.\n​\n그렇다면 SPA는 장점만 있는 것일까?\n역시나 단점이 존재하고, 상황에 맞게 CSR, SSR 렌더링 방식을 선택하는 것이 좋다.</p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/6c208b29-d00b-4f14-9cf6-04c1d90f5b7f/image.jpg\" alt=\"\"></p>\n<p>​\n모바일 웹이 MPA 방식으로 구현됐다면,\n수많은 페이지를 이동할 때, 페이지를 리렌더링 해야 하므로 사용자 경험(UX)이 감소할 것이다.\n<strong>SPA에서는 수정된 부분만 렌더링 하기 때문에, 기존의 웹 페이지보다 UX가 향상된다.</strong></p>\n<p>​\n그렇다면 SPA는 장점만 있는 것일까?\n역시나 단점이 존재하고, 상황에 맞게 CSR, SSR 렌더링 방식을 선택하는 것이 좋다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%EC%84%9C%EB%B2%84%EC%9D%98-%EB%B6%80%ED%95%98-%EA%B0%90%EC%86%8C\">1. 서버의 부하 감소</a></li>\n<li><a href=\"#2-%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\">2. 모바일 최적화</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 01, 2022","title":"SPA(Single Page Application) - [1] 등장 배경","categories":"블로그 web","author":"vvs-kim","emoji":"📓"},"fields":{"slug":"/single-page-application-1/"}},"prev":{"id":"54df58f3-e6a7-5e77-9cee-003d9cdd6c62","html":"<h2 id=\"wwwgooglecom을-검색-시-화면이-출력되는-과정\" style=\"position:relative;\"><a href=\"#wwwgooglecom%EC%9D%84-%EA%B2%80%EC%83%89-%EC%8B%9C-%ED%99%94%EB%A9%B4%EC%9D%B4-%EC%B6%9C%EB%A0%A5%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95\" aria-label=\"wwwgooglecom을 검색 시 화면이 출력되는 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://www.google.com%EC%9D%84\">www.google.com을</a> 검색 시 화면이 출력되는 과정</h2>\n<ol>\n<li>사용자가 주소창에 구글 주소를 입력한다. (<a href=\"https://www.google.com\">https://www.google.com</a>)</li>\n<li>DNS에서 도메인 주소에 해당하는 IP 주소를 찾는다.</li>\n<li>브라우저가 서버와 TCP connection을 한다.</li>\n<li>브라우저가 서버에 HTTP 요청을 한다.</li>\n<li>서버가 HTTP 응답을 보낸다.</li>\n<li>html 파일과 CSS 파일을 각각 파싱 하여 DOM, CSSOM Tree를 만든다. (Parsing)</li>\n<li>DOM Tree 와 CSSOM Tree를 결합하여 Render Tree를 만든다.</li>\n<li>Render Tree에서 각 노드의 위치와 크기를 계산한다. (Layout)</li>\n<li>Layout 단계에서 계산된 값을 여러 Layer로 나눠 픽셀을 채워 넣는다. (Painting)</li>\n<li>여러 Layer로 나누어진 픽셀들을 우리가 보는 화면처럼 합성해 준다. (Composite)</li>\n</ol>\n<p>1<del>5 번은 통신과 관련된 과정이고,\n6</del>11 번은 화면이 어떻게 그려지는지(렌더링)에 대한 과정입니다.</p>\n<p>본 게시물에서는 <strong>브라우저 렌더링</strong>을 중점으로 화면이 어떻게 출력되는지 작성하려 했습니다.</p>\n<p>​</p>\n<h2 id=\"브라우저-렌더링-과정\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\" aria-label=\"브라우저 렌더링 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 렌더링 과정</h2>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/ffc7bffb-315f-4140-8075-2f5087ca7ae4/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"1-dom-cssom-트리-생성\" style=\"position:relative;\"><a href=\"#1-dom-cssom-%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\" aria-label=\"1 dom cssom 트리 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DOM, CSSOM 트리 생성</h3>\n<p>Ⅰ. 변환: 브라우저가 HTML의 원시 바이트를 읽어와서, HTML에 정의된 인코딩에 따라 개별 문자로 변환함\nⅡ. 토큰화: 브라우저가 문자열을 W3C 표준에 지정된 고유 토큰으로 변환함\nⅢ. 렉싱: 방출된 토큰은 해당 속성 및 규칙을 정의하는 ‘객체’로 변환함\nⅣ. DOM 생성: HTML 마크업에 정의된 여러 태그 간의 관계(parent, child)를 해석해서 트리 구조로 연결됨</p>\n<ul>\n<li>DOM 트리를 생성하는 과정과 동일한 과정으로 CSSOM 트리를 생성함</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/786d859b-fc2e-4843-aa06-b592594654a1/image.png\" alt=\"\"></p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/781a2f4d-e28d-42f7-9f65-f1ef6990be7d/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"2-렌더-트리render-tree-생성\" style=\"position:relative;\"><a href=\"#2-%EB%A0%8C%EB%8D%94-%ED%8A%B8%EB%A6%ACrender-tree-%EC%83%9D%EC%84%B1\" aria-label=\"2 렌더 트리render tree 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 렌더 트리(Render Tree) 생성</h3>\n<p>DOM 트리와 CSSOM 트리를 결합해서 렌더 트리를 생성합니다.\n렌더 트리에는 페이지를 렌더링 하는데 필요한 노드만 포함됩니다.\n<img src=\"https://velog.velcdn.com/images/kws60000/post/fc056cc1-d751-497d-9d89-59fcf55fe7ea/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"3-레이아웃layout\" style=\"position:relative;\"><a href=\"#3-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83layout\" aria-label=\"3 레이아웃layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 레이아웃(Layout)</h3>\n<p>렌더 트리가 제자리에 있으면 레이아웃 단계를 진행할 수 있습니다.\n레이아웃 단계에서는 <strong>viewport</strong> 내에서 정확한 위치와 크기를 계산합니다.</p>\n<ul>\n<li>viewport: 화면 Display 상의 표시 영역(ex. 노트북 너비: 1440px, iPhone SE 너비: 375px )</li>\n</ul>\n<p>​</p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/f0d2989a-d915-4005-8d86-17610b37f2e6/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"4-페인팅painting\" style=\"position:relative;\"><a href=\"#4-%ED%8E%98%EC%9D%B8%ED%8C%85painting\" aria-label=\"4 페인팅painting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 페인팅(Painting)</h3>\n<p>레이아웃 단계에서 계산된 각 노드들의 위치, 크기, 색상에 맞춰 화면에 요소를 그립니다.\n단, 전체 Render Tree를 한 번에 처리하는 것이 아니라\n특수한 알고리즘에 따라 Layer를 나눠서 처리합니다.\n<img src=\"https://velog.velcdn.com/images/kws60000/post/8359a7d2-1d96-4380-90ff-908268eb20be/image.avif\" alt=\"\">\n이렇게 Layer를 분리함으로써 특정 요소가 수정되어 리페인트(Repaint) 해야 할 때,\n변경된 Layer만 다시 그려주면 되는 이점이 있습니다.</p>\n<p>​</p>\n<h3 id=\"5-composite\" style=\"position:relative;\"><a href=\"#5-composite\" aria-label=\"5 composite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Composite</h3>\n<p>이렇게 여러 Layer로 나눠진 픽셀들을 우리가 실제로 보는 화면처럼 합성해 주는 단계입니다.\n이러한 과정을 통해 우리는 <a href=\"http://www.google.com\">www.google.com</a> 주소를 입력 시 완성된 화면을 볼 수 있습니다.</p>\n<p>​</p>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>개발할 때 크게 중요시하지 않았던 내용이고, 너무 생소해서 자료를 베끼기에 급급했습니다.\n이번 기회로 조금은 공부는 했지만, 실제로 어떻게 작동하는지는 실제로 확인해야겠다고 생각했습니다.\n또한, 브라우저 렌더링 성능 최적화에 대한 궁금증이 생겼습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#wwwgooglecom%EC%9D%84-%EA%B2%80%EC%83%89-%EC%8B%9C-%ED%99%94%EB%A9%B4%EC%9D%B4-%EC%B6%9C%EB%A0%A5%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95\">www.google.com을 검색 시 화면이 출력되는 과정</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\">브라우저 렌더링 과정</a></p>\n<ul>\n<li><a href=\"#1-dom-cssom-%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\">1. DOM, CSSOM 트리 생성</a></li>\n<li><a href=\"#2-%EB%A0%8C%EB%8D%94-%ED%8A%B8%EB%A6%ACrender-tree-%EC%83%9D%EC%84%B1\">2. 렌더 트리(Render Tree) 생성</a></li>\n<li><a href=\"#3-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83layout\">3. 레이아웃(Layout)</a></li>\n<li><a href=\"#4-%ED%8E%98%EC%9D%B8%ED%8C%85painting\">4. 페인팅(Painting)</a></li>\n<li><a href=\"#5-composite\">5. Composite</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 04, 2022","title":"www.google.com을 검색 시 발생하는 일 - [ 브라우저 렌더링 ]","categories":"블로그 web","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/www-google-com-search/"}},"site":{"siteMetadata":{"siteUrl":"https://vvs-kim.github.io","comments":{"utterances":{"repo":"vvs-kim/vvs-kim.github.io"}}}}},"pageContext":{"slug":"/err-connection-refused/","nextSlug":"/single-page-application-1/","prevSlug":"/www-google-com-search/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}