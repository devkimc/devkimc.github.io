{"componentChunkName":"component---src-templates-blog-template-js","path":"/vue-cors-error","result":{"data":{"cur":{"id":"66ae95ed-8773-50ec-a40b-2729a1e722fe","html":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Access to XMLHttpRequest at <span class=\"token string\">'local address'</span> from origin <span class=\"token string\">'api address'</span> has been blocked by <span class=\"token constant\">CORS</span> <span class=\"token literal-property property\">policy</span><span class=\"token operator\">:</span>\nNo <span class=\"token string\">'Access-Control-Allow-Origin'</span> header is present on the requested resource<span class=\"token punctuation\">.</span></code></pre></div>\n<p>​</p>\n<h2 id=\"에러-배경\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD\" aria-label=\"에러 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 배경</h2>\n<ol>\n<li>\n<p>vue 에서 kakao map api 를 사용하여 지도에서 맛집(장소)을 검색했다.</p>\n</li>\n<li>\n<p>주소 이외의 장소에 대한 상세정보가 필요했다.</p>\n</li>\n<li>\n<p>카카오 플레이스 (map.place.kakao) 로 장소에 대한 정보를 조회 요청했다.</p>\n</li>\n<li>\n<p>Cors Error 발생\n​</p>\n</li>\n</ol>\n<h2 id=\"에러-발생-이유\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%9C%A0\" aria-label=\"에러 발생 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 발생 이유</h2>\n<ul>\n<li>로컬 주소(localhost:8000) 와 조회하려는 주소(map.place.kakao:443) 의 출처가 다르다.</li>\n</ul>\n<p>​</p>\n<h2 id=\"cors-error-cross-origin-resource-sharing\" style=\"position:relative;\"><a href=\"#cors-error-cross-origin-resource-sharing\" aria-label=\"cors error cross origin resource sharing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CORS Error (Cross-Origin Resource Sharing)</h2>\n<p>간단히 말해서,</p>\n<p>브라우저에서 요청하는 주소와 응답하는 주소(출처)가 다를 때</p>\n<p>허락한 요청 외에는 에러를 발생시키겠다.</p>\n<p>​</p>\n<p>ex) 둘을 비교하면 프로토콜(http) 와 호스트(loaclhost), 포트(8000) 모두 다르다. 에러 발생</p>\n<p>요청하는 주소: http :// localhost : 8000</p>\n<p>응답하는 주소: https :// map.place.kakao : 443\n​</p>\n<h3 id=\"허락한-요청이란\" style=\"position:relative;\"><a href=\"#%ED%97%88%EB%9D%BD%ED%95%9C-%EC%9A%94%EC%B2%AD%EC%9D%B4%EB%9E%80\" aria-label=\"허락한 요청이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>허락한 요청이란?</h3>\n<p>출처가 다르더라도 요청을 허락하도록 응답 헤더에 설정한 요청을 말한다.</p>\n<p>ex) Access-Control-Allow-Origin : *</p>\n<p>ex) Access-Control-Allow-Credentials : true</p>\n<p>​</p>\n<h2 id=\"에러-해결-과정-방법-1\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95-%EB%B0%A9%EB%B2%95-1\" aria-label=\"에러 해결 과정 방법 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 해결 과정 (방법 1)</h2>\n<h3 id=\"1-프록시-서버를-사용해서-우회하기\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%9A%B0%ED%9A%8C%ED%95%98%EA%B8%B0\" aria-label=\"1 프록시 서버를 사용해서 우회하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프록시 서버를 사용해서 우회하기</h3>\n<ul>\n<li>\n<p><a href=\"https://cors-anywhere.herokuapp.com\">https://cors-anywhere.herokuapp.com</a></p>\n</li>\n<li>\n<p>해당 프록시 서버에서 헤더 설정을 해준다. ( Access-Control-Allow-Origin : * )​</p>\n</li>\n<li>\n<p>프론트에서 카카오 API를 요청하고 싶을 때 할 수 있는 유일한 방법이었다.</p>\n</li>\n<li>\n<p>해당 프록시 서버가 중단될 경우 원하는 응답을 받을 수 없고, 코드가 깔끔하지 못한 단점이 있다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token function\">getData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">baseUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://cors-anywhere.herokuapp.com/https://place.map.kakao.com:443/main/v/9209726'</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>baseUrl<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>​</p>\n<h2 id=\"에러-해결-과정-방법-2\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95-%EB%B0%A9%EB%B2%95-2\" aria-label=\"에러 해결 과정 방법 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 해결 과정 (방법 2)</h2>\n<h3 id=\"1-프록시-서버-구축하기\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\" aria-label=\"1 프록시 서버 구축하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프록시 서버 구축하기</h3>\n<ul>\n<li>\n<p>해당 방법은 프론트에서 외부 API 를 요청하는 방법이 아니다.</p>\n</li>\n<li>\n<p>요청 순서: vue -> express -> kakao api</p>\n</li>\n<li>\n<p>express 서버에서 요청할 경우 에러를 발생시키지 않는다.</p>\n</li>\n<li>\n<p>참고했던 설명이다.</p>\n</li>\n</ul>\n<blockquote>\n<p>CORS 는 브라우저에 관련된 정책이기 때문에,\n<strong>브라우저를 통하지 않고 서버 간 통신을 할 때는 이 정책이 적용되지 않는다.</strong>\n즉, 서버에서 서버로 리소스를 요청하면 CORS 정책을 위반하지 않고 정상적으로 응답을 받을 수 있다.</p>\n</blockquote>\n<ul>\n<li>출처: <a href=\"https://xiubindev.tistory.com/115\">https://xiubindev.tistory.com/115</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ﻿express 서버에서 카카오 API 요청 코드</span>\n\n<span class=\"token keyword\">const</span> kakaoPlaceUrl <span class=\"token operator\">=</span> <span class=\"token string\">'https://place.map.kakao.com:443/main/v/'</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/place/info'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> kakaoPlaceIdUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>kakaoPlaceUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token constant\">PLACE_ID</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\n  axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>kakaoPlaceIdUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>isExist <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">30001</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> <span class=\"token string\">\"장소에 대한 정보가 조회되었습니다.\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>data\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"2-vuejs-코드-수정\" style=\"position:relative;\"><a href=\"#2-vuejs-%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95\" aria-label=\"2 vuejs 코드 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. vue.js 코드 수정</h3>\n<ul>\n<li>express 서버에서 카카오 API 를 요청하기 때문에 vue 에서는 파라미터만 전달하면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ﻿express 서버에 요청하는 함수</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getKakaoPlaceInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">placeId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">axiosPost</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/kakao/place/info'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">PLACE_ID</span><span class=\"token operator\">:</span> placeId<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ﻿express 서버에 요청하는 함수를 실행하는 부분</span>\n\n    <span class=\"token function\">getPlaceDetail</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">place<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">getKakaoPlaceInfo</span><span class=\"token punctuation\">(</span>place<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">30001</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>resSearchDetail<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calcRating</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token string\">'danger'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"3-vuejs-실행-후-카카오-api-요청\" style=\"position:relative;\"><a href=\"#3-vuejs-%EC%8B%A4%ED%96%89-%ED%9B%84-%EC%B9%B4%EC%B9%B4%EC%98%A4-api-%EC%9A%94%EC%B2%AD\" aria-label=\"3 vuejs 실행 후 카카오 api 요청 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. vue.js 실행 후 카카오 API 요청</h3>\n<ul>\n<li>해당 장소에 대한 상세정보를 응답받는다.</li>\n<li>ex) 리뷰 / 후기</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/ed5d4824-eb93-4219-bd24-cffcd6370a2e/image.png\" alt=\"\"></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD\">에러 배경</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%9C%A0\">에러 발생 이유</a></p>\n</li>\n<li>\n<p><a href=\"#cors-error-cross-origin-resource-sharing\">CORS Error (Cross-Origin Resource Sharing)</a></p>\n<ul>\n<li><a href=\"#%ED%97%88%EB%9D%BD%ED%95%9C-%EC%9A%94%EC%B2%AD%EC%9D%B4%EB%9E%80\">허락한 요청이란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95-%EB%B0%A9%EB%B2%95-1\">에러 해결 과정 (방법 1)</a></p>\n<ul>\n<li><a href=\"#1-%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%9A%B0%ED%9A%8C%ED%95%98%EA%B8%B0\">1. 프록시 서버를 사용해서 우회하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95-%EB%B0%A9%EB%B2%95-2\">에러 해결 과정 (방법 2)</a></p>\n<ul>\n<li><a href=\"#1-%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\">1. 프록시 서버 구축하기</a></li>\n<li><a href=\"#2-vuejs-%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95\">2. vue.js 코드 수정</a></li>\n<li><a href=\"#3-vuejs-%EC%8B%A4%ED%96%89-%ED%9B%84-%EC%B9%B4%EC%B9%B4%EC%98%A4-api-%EC%9A%94%EC%B2%AD\">3. vue.js 실행 후 카카오 API 요청</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"​ 에러 배경 vue 에서 kakao map api 를 사용하여 지도에서 맛집(장소)을 검색했다. 주소 이외의 장소에 대한 상세정보가 필요했다. 카카오 플레이스 (map.place.kakao) 로 장소에 대한 정보를 조회 요청했다. Cors Error 발생\n​ 에러 발생 이유 로컬 주소(localhost:8000) 와 조회하려는 주소(map.place.kakao:443) 의 출처가 다르다. ​ CORS Error (Cross-Origin Resource Sharing) 간단히 말해서, 브라우저에서 요청하는 주소와 응답하는 주소(출처)가 다를 때 허락한 요청 외에는 에러를 발생시키겠다. ​ ex) 둘을 비교하면 프로토콜(http) 와 호스트(loaclhost), 포트(8000) 모두 다르다. 에러 발생 요청하는 주소: http :// localhost : 8000 응답하는 주소: https :// map.place.kakao : 443\n​ 허락한 요청이란? 출처가 다르더라도 요청을 …","frontmatter":{"date":"August 04, 2022","title":"CORS Error [ vue 에서 외부 API 요청 시 ]","categories":"블로그 web","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/vue-cors-error/"}},"next":{"id":"54df58f3-e6a7-5e77-9cee-003d9cdd6c62","html":"<h2 id=\"wwwgooglecom을-검색-시-화면이-출력되는-과정\" style=\"position:relative;\"><a href=\"#wwwgooglecom%EC%9D%84-%EA%B2%80%EC%83%89-%EC%8B%9C-%ED%99%94%EB%A9%B4%EC%9D%B4-%EC%B6%9C%EB%A0%A5%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95\" aria-label=\"wwwgooglecom을 검색 시 화면이 출력되는 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://www.google.com%EC%9D%84\">www.google.com을</a> 검색 시 화면이 출력되는 과정</h2>\n<ol>\n<li>사용자가 주소창에 구글 주소를 입력한다. (<a href=\"https://www.google.com\">https://www.google.com</a>)</li>\n<li>DNS에서 도메인 주소에 해당하는 IP 주소를 찾는다.</li>\n<li>브라우저가 서버와 TCP connection을 한다.</li>\n<li>브라우저가 서버에 HTTP 요청을 한다.</li>\n<li>서버가 HTTP 응답을 보낸다.</li>\n<li>html 파일과 CSS 파일을 각각 파싱 하여 DOM, CSSOM Tree를 만든다. (Parsing)</li>\n<li>DOM Tree 와 CSSOM Tree를 결합하여 Render Tree를 만든다.</li>\n<li>Render Tree에서 각 노드의 위치와 크기를 계산한다. (Layout)</li>\n<li>Layout 단계에서 계산된 값을 여러 Layer로 나눠 픽셀을 채워 넣는다. (Painting)</li>\n<li>여러 Layer로 나누어진 픽셀들을 우리가 보는 화면처럼 합성해 준다. (Composite)</li>\n</ol>\n<p>1<del>5 번은 통신과 관련된 과정이고,\n6</del>11 번은 화면이 어떻게 그려지는지(렌더링)에 대한 과정입니다.</p>\n<p>본 게시물에서는 <strong>브라우저 렌더링</strong>을 중점으로 화면이 어떻게 출력되는지 작성하려 했습니다.</p>\n<p>​</p>\n<h2 id=\"브라우저-렌더링-과정\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\" aria-label=\"브라우저 렌더링 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 렌더링 과정</h2>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/ffc7bffb-315f-4140-8075-2f5087ca7ae4/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"1-dom-cssom-트리-생성\" style=\"position:relative;\"><a href=\"#1-dom-cssom-%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\" aria-label=\"1 dom cssom 트리 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DOM, CSSOM 트리 생성</h3>\n<p>Ⅰ. 변환: 브라우저가 HTML의 원시 바이트를 읽어와서, HTML에 정의된 인코딩에 따라 개별 문자로 변환함\nⅡ. 토큰화: 브라우저가 문자열을 W3C 표준에 지정된 고유 토큰으로 변환함\nⅢ. 렉싱: 방출된 토큰은 해당 속성 및 규칙을 정의하는 ‘객체’로 변환함\nⅣ. DOM 생성: HTML 마크업에 정의된 여러 태그 간의 관계(parent, child)를 해석해서 트리 구조로 연결됨</p>\n<ul>\n<li>DOM 트리를 생성하는 과정과 동일한 과정으로 CSSOM 트리를 생성함</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/786d859b-fc2e-4843-aa06-b592594654a1/image.png\" alt=\"\"></p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/781a2f4d-e28d-42f7-9f65-f1ef6990be7d/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"2-렌더-트리render-tree-생성\" style=\"position:relative;\"><a href=\"#2-%EB%A0%8C%EB%8D%94-%ED%8A%B8%EB%A6%ACrender-tree-%EC%83%9D%EC%84%B1\" aria-label=\"2 렌더 트리render tree 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 렌더 트리(Render Tree) 생성</h3>\n<p>DOM 트리와 CSSOM 트리를 결합해서 렌더 트리를 생성합니다.\n렌더 트리에는 페이지를 렌더링 하는데 필요한 노드만 포함됩니다.\n<img src=\"https://velog.velcdn.com/images/kws60000/post/fc056cc1-d751-497d-9d89-59fcf55fe7ea/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"3-레이아웃layout\" style=\"position:relative;\"><a href=\"#3-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83layout\" aria-label=\"3 레이아웃layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 레이아웃(Layout)</h3>\n<p>렌더 트리가 제자리에 있으면 레이아웃 단계를 진행할 수 있습니다.\n레이아웃 단계에서는 <strong>viewport</strong> 내에서 정확한 위치와 크기를 계산합니다.</p>\n<ul>\n<li>viewport: 화면 Display 상의 표시 영역(ex. 노트북 너비: 1440px, iPhone SE 너비: 375px )</li>\n</ul>\n<p>​</p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/f0d2989a-d915-4005-8d86-17610b37f2e6/image.png\" alt=\"\"></p>\n<p>​</p>\n<h3 id=\"4-페인팅painting\" style=\"position:relative;\"><a href=\"#4-%ED%8E%98%EC%9D%B8%ED%8C%85painting\" aria-label=\"4 페인팅painting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 페인팅(Painting)</h3>\n<p>레이아웃 단계에서 계산된 각 노드들의 위치, 크기, 색상에 맞춰 화면에 요소를 그립니다.\n단, 전체 Render Tree를 한 번에 처리하는 것이 아니라\n특수한 알고리즘에 따라 Layer를 나눠서 처리합니다.\n<img src=\"https://velog.velcdn.com/images/kws60000/post/8359a7d2-1d96-4380-90ff-908268eb20be/image.avif\" alt=\"\">\n이렇게 Layer를 분리함으로써 특정 요소가 수정되어 리페인트(Repaint) 해야 할 때,\n변경된 Layer만 다시 그려주면 되는 이점이 있습니다.</p>\n<p>​</p>\n<h3 id=\"5-composite\" style=\"position:relative;\"><a href=\"#5-composite\" aria-label=\"5 composite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Composite</h3>\n<p>이렇게 여러 Layer로 나눠진 픽셀들을 우리가 실제로 보는 화면처럼 합성해 주는 단계입니다.\n이러한 과정을 통해 우리는 <a href=\"http://www.google.com\">www.google.com</a> 주소를 입력 시 완성된 화면을 볼 수 있습니다.</p>\n<p>​</p>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>개발할 때 크게 중요시하지 않았던 내용이고, 너무 생소해서 자료를 베끼기에 급급했습니다.\n이번 기회로 조금은 공부는 했지만, 실제로 어떻게 작동하는지는 실제로 확인해야겠다고 생각했습니다.\n또한, 브라우저 렌더링 성능 최적화에 대한 궁금증이 생겼습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#wwwgooglecom%EC%9D%84-%EA%B2%80%EC%83%89-%EC%8B%9C-%ED%99%94%EB%A9%B4%EC%9D%B4-%EC%B6%9C%EB%A0%A5%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95\">www.google.com을 검색 시 화면이 출력되는 과정</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\">브라우저 렌더링 과정</a></p>\n<ul>\n<li><a href=\"#1-dom-cssom-%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\">1. DOM, CSSOM 트리 생성</a></li>\n<li><a href=\"#2-%EB%A0%8C%EB%8D%94-%ED%8A%B8%EB%A6%ACrender-tree-%EC%83%9D%EC%84%B1\">2. 렌더 트리(Render Tree) 생성</a></li>\n<li><a href=\"#3-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83layout\">3. 레이아웃(Layout)</a></li>\n<li><a href=\"#4-%ED%8E%98%EC%9D%B8%ED%8C%85painting\">4. 페인팅(Painting)</a></li>\n<li><a href=\"#5-composite\">5. Composite</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 04, 2022","title":"www.google.com을 검색 시 발생하는 일 - [ 브라우저 렌더링 ]","categories":"블로그 web","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/www-google-com-search/"}},"prev":{"id":"6de08e55-afd6-58e1-b067-bc30ccc747a3","html":"<h2 id=\"포스팅-배경\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8C%85-%EB%B0%B0%EA%B2%BD\" aria-label=\"포스팅 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포스팅 배경</h2>\n<h3 id=\"jenkins를-실무에서-왜-사용할까\" style=\"position:relative;\"><a href=\"#jenkins%EB%A5%BC-%EC%8B%A4%EB%AC%B4%EC%97%90%EC%84%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C\" aria-label=\"jenkins를 실무에서 왜 사용할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins를 실무에서 왜 사용할까?</h3>\n<p>이전 직장에서 xshell, total commander 를 사용하여 수동으로 배포를 했었습니다.\n상당히 위험한 순간도 많았고, 실수한 적도 많았습니다.\n이에 대한 불편함을 느끼고, 현 직장에서는 자동 배포환경을 구축했습니다.\n이로 인해 동료 개발자도 배포가 쉬워지는 장점을 느꼈습니다.</p>\n<h3 id=\"기억보단-기록\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%96%B5%EB%B3%B4%EB%8B%A8-%EA%B8%B0%EB%A1%9D\" aria-label=\"기억보단 기록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기억보단 기록</h3>\n<p>Jenkins 환경 구축을 4번했습니다.\n잦은 장비 변경으로 인해 window, linux, mac, docker 등 각 OS에 모두 설치할 때마다\n이전 과정이 기억나지 않았고, 많은 시간을 소비했습니다.\n기록에 대한 필요성을 느꼈고, 저와 같은 불편함을 겪는 분들에게 도움이 되면 좋겠습니다.</p>\n<h2 id=\"순서\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%84%9C\" aria-label=\"순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순서</h2>\n<ol>\n<li>Jenkins 설치 및 계정 설정</li>\n<li>Jenkins - github 계정 연동 설정</li>\n<li>프로젝트 생성</li>\n<li>프로젝트 - github repository 연동 설정</li>\n<li>플러그인 설치, 설정(ex. node, publish over ssh)</li>\n<li>Build steps, 빌드 전/후 조치 설정</li>\n</ol>\n<h2 id=\"전체-과정\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EA%B3%BC%EC%A0%95\" aria-label=\"전체 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 과정</h2>\n<h3 id=\"1-jenkins-설치-및-계정-설정\" style=\"position:relative;\"><a href=\"#1-jenkins-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EA%B3%84%EC%A0%95-%EC%84%A4%EC%A0%95\" aria-label=\"1 jenkins 설치 및 계정 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Jenkins 설치 및 계정 설정</h3>\n<p><a href=\"https://www.jenkins.io/download/\">https://www.jenkins.io/download/</a>\n해당 페이지에서 각 OS 별 요구하는 Jenkins 를 설치합니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/fdda899c-e5c7-4450-9e74-0f7619020104/image.PNG\" alt=\"\"></p>\n<p>Jenkins 설치 후 해당 경로의 초기 비밀번호를 입력합니다.\nplugin은 Install suggested plugins 를 선택해도 괜찮습니다. (추후 설치 가능)</p>\n<p>설치되면 Admin 계정을 설정합니다.\nport 를 설정할 수 있습니다.\n저의 경우, 백엔드 api에서 8080 포트를 사용하므로 8090으로 변경했습니다.</p>\n<h3 id=\"2-jenkins---github-계정-연동-설정\" style=\"position:relative;\"><a href=\"#2-jenkins---github-%EA%B3%84%EC%A0%95-%EC%97%B0%EB%8F%99-%EC%84%A4%EC%A0%95\" aria-label=\"2 jenkins   github 계정 연동 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Jenkins - github 계정 연동 설정</h3>\n<p><a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a>\nor\ngithub -> settings -> developer settings -> Personal access tokens</p>\n<p>해당 페이지에서 Generate new token 클릭\ntoken 이름 설정 후 repo, admin_hook 을 체크하고 Generate token 을 클릭합니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/caeb1570-f512-45c7-8e28-2434dea7f5cc/image.PNG\" alt=\"\"><img src=\"https://velog.velcdn.com/images/kws60000/post/b04e2890-49ea-45b9-987b-a88ad91b7ff0/image.png\" alt=\"\"> 빨간부분을 복사합니다.</p>\n<p>Jenkins 홈 -> Jenkins 관리 -> Configure System 로 이동합니다.\ngit 메뉴에 있는 Add github server 를 클릭 후 Credentials 하단의 Add 버튼을 클릭합니다.\n복사한 텍스트를 Secret에 입력합니다.<img src=\"https://velog.velcdn.com/images/kws60000/post/88f985a5-d7e3-49bf-b958-b71528217214/image.PNG\" alt=\"\">설정한 credential 을 적용 후\ntest connection 클릭 시 이렇게 출력된다면 연동된 것입니다.</p>\n<blockquote>\n<p>Credentials verified for user “your ID”, rate limit: 4999</p>\n</blockquote>\n<h3 id=\"3-프로젝트-생성\" style=\"position:relative;\"><a href=\"#3-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"3 프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 프로젝트 생성</h3>\n<p>Jenkins 홈 -> 새로운 Item -> ID 입력, Freestyle project 클릭 후 Ok 버튼 클릭</p>\n<h3 id=\"4-프로젝트---github-repository-연동-설정\" style=\"position:relative;\"><a href=\"#4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---github-repository-%EC%97%B0%EB%8F%99-%EC%84%A4%EC%A0%95\" aria-label=\"4 프로젝트   github repository 연동 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 프로젝트 - github repository 연동 설정</h3>\n<p>Jenkins 홈 -> 생성한 프로젝트 클릭 -> 구성\n소스 코드 관리 Git 선택 후 Repository URL 입력\n<a href=\"mailto:git@github.com\">git@github.com</a>:kws60000/Must_Eat_2.git 와 같은 ssh url 을 입력합니다.\n<img src=\"https://velog.velcdn.com/images/kws60000/post/8b93253c-3e46-4cec-aa07-c0b4227bae87/image.png\" alt=\"\"></p>\n<p>에러가 뜹니다. jenkins workspace에 ssh key를 추가해야 합니다.\nJenkins 홈 -> Jenkins 관리 -> Configure System 로 이동하면 각 OS 별 홈 디렉토리를 알려줍니다.\n<img src=\"https://velog.velcdn.com/images/kws60000/post/e9734dcc-a5e1-4f95-b41e-eaa2e5038510/image.png\" alt=\"\">디렉토리 이동 후 cd jobs/your_project_name 또는 cd workspace/your_project_name 이동\n해당 경로는 jenkins project 경로입니다. ssh 접속을 위한 파일을 추가해야 합니다.</p>\n<blockquote>\n<p><em>* 해당 기록은 추가 수정이 필요합니다</em> > <em>* ‘jenkins github ssh 연동’ 이라고 검색하시면 원하는 자료를 찾으실 수 있습니다.</em></p>\n</blockquote>\n<h4 id=\"1-ssh-key-파일-생성\" style=\"position:relative;\"><a href=\"#1-ssh-key-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"1 ssh key 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ssh key 파일 생성</h4>\n<p>해당 디렉토리에서 .ssh 파일 추가 후 ssh key 파일을 생성합니다.</p>\n<h4 id=\"2-github에-ssh-key-등록\" style=\"position:relative;\"><a href=\"#2-github%EC%97%90-ssh-key-%EB%93%B1%EB%A1%9D\" aria-label=\"2 github에 ssh key 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. github에 ssh key 등록</h4>\n<p><a href=\"https://github.com/settings/ssh/new\">https://github.com/settings/ssh/new</a></p>\n<h4 id=\"3-jenkins-프로젝트-구성-add-credential\" style=\"position:relative;\"><a href=\"#3-jenkins-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%84%B1-add-credential\" aria-label=\"3 jenkins 프로젝트 구성 add credential permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Jenkins 프로젝트 구성 Add credential</h4>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/004a34f3-3447-4f36-90d8-3faed895e8fd/image.png\" alt=\"\"></p>\n<h3 id=\"5-플러그인-설치-설정\" style=\"position:relative;\"><a href=\"#5-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%84%A4%EC%B9%98-%EC%84%A4%EC%A0%95\" aria-label=\"5 플러그인 설치 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 플러그인 설치, 설정</h3>\n<p>jenkins 에서 패키지, 플러그인을 사용하기위한 과정입니다.\n저의 경우 nodejs, publish over ssh 플러그인을 사용했습니다.</p>\n<h3 id=\"6-build-steps-빌드-전후-조치-설정\" style=\"position:relative;\"><a href=\"#6-build-steps-%EB%B9%8C%EB%93%9C-%EC%A0%84%ED%9B%84-%EC%A1%B0%EC%B9%98-%EC%84%A4%EC%A0%95\" aria-label=\"6 build steps 빌드 전후 조치 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Build steps, 빌드 전/후 조치 설정</h3>\n<p>설치한 플러그인을 활용해 빌드 script, 전/후 처리를 하는 과정입니다.</p>\n<p>저의 경우\n<strong>Build</strong> 단계에서 npm install, build 를 진행합니다.\nCI는 환경변수이고, 정확한 이유는 모르나 false로 지정해야 오류가 나지 않았습니다.</p>\n<p><strong>빌드 후 조치</strong> 단계에서 서버에 SSH 접속 후 build된 파일을 서버로 모두 전송했습니다.\n이후 nginx 를 재실행 함으로서 배포가 마무리 됩니다.</p>\n<p>Jenkins 홈 -> 생성한 프로젝트 클릭 -> 구성\n<img src=\"https://velog.velcdn.com/images/kws60000/post/4162308e-291a-4992-8805-11f1d2fef6f6/image.png\" alt=\"\"></p>\n<p><img src=\"https://velog.velcdn.com/images/kws60000/post/6218a7f9-7f19-4e17-80d7-6c8945adcc16/image.png\" alt=\"\"></p>\n<h2 id=\"jenkins-적용-후\" style=\"position:relative;\"><a href=\"#jenkins-%EC%A0%81%EC%9A%A9-%ED%9B%84\" aria-label=\"jenkins 적용 후 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins 적용 후</h2>\n<ul>\n<li>\n<p>수동 배포만 하다가 <strong>버튼 한 번으로 배포가 된다는 것</strong>과 팀즈(hook)의 알람을 통해 <strong>배포의 성공 유무를 확인할 수 있다는 것</strong>은 정말 많은 시간을 줄여주고 편리했습니다.</p>\n</li>\n<li>\n<p>타 개발자도 사설 IP를 통해 jenkins를 사용할 수 있어서 두배 이상의 효과가 있었습니다.</p>\n</li>\n<li>\n<p>미흡한 점도 많습니다. CD는 구축한 것 같으나 CI에 대한 설정이 필요합니다. <strong>테스트에 대한 설정이 필요합니다.</strong></p>\n</li>\n<li>\n<p>기회가 된다면, github action hook을 통해 배포를 해보고 싶다는 생각을 했습니다.</p>\n</li>\n</ul>\n<p>긴 글 읽어주셔서 고맙습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8C%85-%EB%B0%B0%EA%B2%BD\">포스팅 배경</a></p>\n<ul>\n<li><a href=\"#jenkins%EB%A5%BC-%EC%8B%A4%EB%AC%B4%EC%97%90%EC%84%9C-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C\">Jenkins를 실무에서 왜 사용할까?</a></li>\n<li><a href=\"#%EA%B8%B0%EC%96%B5%EB%B3%B4%EB%8B%A8-%EA%B8%B0%EB%A1%9D\">기억보단 기록</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%88%9C%EC%84%9C\">순서</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%84%EC%B2%B4-%EA%B3%BC%EC%A0%95\">전체 과정</a></p>\n<ul>\n<li>\n<p><a href=\"#1-jenkins-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EA%B3%84%EC%A0%95-%EC%84%A4%EC%A0%95\">1. Jenkins 설치 및 계정 설정</a></p>\n</li>\n<li>\n<p><a href=\"#2-jenkins---github-%EA%B3%84%EC%A0%95-%EC%97%B0%EB%8F%99-%EC%84%A4%EC%A0%95\">2. Jenkins - github 계정 연동 설정</a></p>\n</li>\n<li>\n<p><a href=\"#3-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\">3. 프로젝트 생성</a></p>\n</li>\n<li>\n<p><a href=\"#4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---github-repository-%EC%97%B0%EB%8F%99-%EC%84%A4%EC%A0%95\">4. 프로젝트 - github repository 연동 설정</a></p>\n<ul>\n<li><a href=\"#1-ssh-key-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">1. ssh key 파일 생성</a></li>\n<li><a href=\"#2-github%EC%97%90-ssh-key-%EB%93%B1%EB%A1%9D\">2. github에 ssh key 등록</a></li>\n<li><a href=\"#3-jenkins-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%84%B1-add-credential\">3. Jenkins 프로젝트 구성 Add credential</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%84%A4%EC%B9%98-%EC%84%A4%EC%A0%95\">5. 플러그인 설치, 설정</a></p>\n</li>\n<li>\n<p><a href=\"#6-build-steps-%EB%B9%8C%EB%93%9C-%EC%A0%84%ED%9B%84-%EC%A1%B0%EC%B9%98-%EC%84%A4%EC%A0%95\">6. Build steps, 빌드 전/후 조치 설정</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#jenkins-%EC%A0%81%EC%9A%A9-%ED%9B%84\">Jenkins 적용 후</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 27, 2022","title":"Jenkins 자동 배포하기 (+github 연동)","categories":"블로그 ci/cd","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/jenkins-deploy-with-github/"}},"site":{"siteMetadata":{"siteUrl":"https://vvs-kim.github.io","comments":{"utterances":{"repo":"vvs-kim/vvs-kim.github.io"}}}}},"pageContext":{"slug":"/vue-cors-error/","nextSlug":"/www-google-com-search/","prevSlug":"/jenkins-deploy-with-github/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}