{"componentChunkName":"component---src-templates-blog-template-js","path":"/builder-annotation-nullpointerexception","result":{"data":{"cur":{"id":"401ba422-fe49-5e29-8d81-298d309dd731","html":"<h2 id=\"-에러-상황\" style=\"position:relative;\"><a href=\"#-%EC%97%90%EB%9F%AC-%EC%83%81%ED%99%A9\" aria-label=\" 에러 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚫 에러 상황</h2>\n<p>builder 패턴을 사용하여 유저 인스턴스를 생성했고, userGroups 필드(List)에 데이터를 추가하자 NullPointException 이 발생했다.</p>\n<blockquote>\n<p>java.lang.NullPointerException: Cannot invoke “java.util.List.add(Object)” because the return value of “user.domain.User.getUserGroups()” is null</p>\n</blockquote>\n<br/>\n<h3 id=\"user-엔티티\" style=\"position:relative;\"><a href=\"#user-%EC%97%94%ED%8B%B0%ED%8B%B0\" aria-label=\"user 엔티티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User 엔티티</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Builder</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token annotation punctuation\">@OneToMany</span><span class=\"token punctuation\">(</span>mappedBy <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGroup</span><span class=\"token punctuation\">></span></span> userGroups <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGroup</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@OneToMany</span><span class=\"token punctuation\">(</span>mappedBy <span class=\"token operator\">=</span> <span class=\"token string\">\"recvUser\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Invite</span><span class=\"token punctuation\">></span></span> invites <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Invite</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h3 id=\"user-생성---builder-사용\" style=\"position:relative;\"><a href=\"#user-%EC%83%9D%EC%84%B1---builder-%EC%82%AC%EC%9A%A9\" aria-label=\"user 생성   builder 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>User 생성 - builder 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token annotation punctuation\">@Transactional</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SocialJoinRequest</span> socialJoinRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">socialUserId</span><span class=\"token punctuation\">(</span>socialJoinRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getSocialUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">email</span><span class=\"token punctuation\">(</span>socialJoinRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">nickname</span><span class=\"token punctuation\">(</span>socialJoinRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">loginType</span><span class=\"token punctuation\">(</span>socialJoinRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">userType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ROLE_GENERAL</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> userRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2 id=\"-에러-원인\" style=\"position:relative;\"><a href=\"#-%EC%97%90%EB%9F%AC-%EC%9B%90%EC%9D%B8\" aria-label=\" 에러 원인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📜 에러 원인</h2>\n<p>null 인 리스트에 데이터를 추가할 수 없다는 것이다.\n엔티티에서 리스트 필드를 초기화 했음에도 불구하고 null 인 상황인다..</p>\n<p>의심가는 건 builder 메서드를 사용 시 List 의 값은 입력하지 않았다.\n알아보니 builder 패턴은 엔티티에서 초기화한 값을 무시하고 초기화를 한다.</p>\n<p>따라서 builder 패턴 사용 시, 생성된 유저의 List 필드는 아래와 같았을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@OneToMany</span><span class=\"token punctuation\">(</span>mappedBy <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGroup</span><span class=\"token punctuation\">></span></span> userGroups<span class=\"token punctuation\">;</span></code></pre></div>\n<br />\n<h2 id=\"-해결-방법\" style=\"position:relative;\"><a href=\"#-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\" 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 해결 방법</h2>\n<h3 id=\"1-기본-생성자-사용\" style=\"position:relative;\"><a href=\"#1-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%EC%82%AC%EC%9A%A9\" aria-label=\"1 기본 생성자 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 기본 생성자 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>socialJoinRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getSocialUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>socialJoinRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getEmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>기본 생성자 사용시, 엔티티에서 초기화한 값으로 인스턴스를 생성하므로 List 는 null 이 아니다.</p>\n<br />\n<h3 id=\"2-builder-메서드-사용-시-list-필드-초기화\" style=\"position:relative;\"><a href=\"#2-builder-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%82%AC%EC%9A%A9-%EC%8B%9C-list-%ED%95%84%EB%93%9C-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"2 builder 메서드 사용 시 list 필드 초기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. builder 메서드 사용 시, List 필드 초기화</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token annotation punctuation\">@Transactional</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SocialJoinRequest</span> socialJoinRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">userGroups</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGroup</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> userRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>builder 메서드를 사용할 때마다 list 를 초기화 시켜줘야 하는 단점이 있다.</p>\n<br />\n<h3 id=\"3-builderdefault-어노테이션-사용\" style=\"position:relative;\"><a href=\"#3-builderdefault-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EC%82%AC%EC%9A%A9\" aria-label=\"3 builderdefault 어노테이션 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Builder.Default 어노테이션 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Builder.Default</span>\n    <span class=\"token annotation punctuation\">@OneToMany</span><span class=\"token punctuation\">(</span>mappedBy <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGroup</span><span class=\"token punctuation\">></span></span> userGroups <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGroup</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>builder 패턴으로 인스턴스 생성시, 지정한 값으로 초기화 시켜주는 방법이다.</p>\n<br />\n<h2 id=\"참고-사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 사이트</h2>\n<p><a href=\"https://bbeomgeun.tistory.com/174\">https://bbeomgeun.tistory.com/174</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%97%90%EB%9F%AC-%EC%83%81%ED%99%A9\">🚫 에러 상황</a></p>\n<ul>\n<li><a href=\"#user-%EC%97%94%ED%8B%B0%ED%8B%B0\">User 엔티티</a></li>\n<li><a href=\"#user-%EC%83%9D%EC%84%B1---builder-%EC%82%AC%EC%9A%A9\">User 생성 - builder 사용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%97%90%EB%9F%AC-%EC%9B%90%EC%9D%B8\">📜 에러 원인</a></p>\n</li>\n<li>\n<p><a href=\"#-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">🔑 해결 방법</a></p>\n<ul>\n<li><a href=\"#1-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%EC%82%AC%EC%9A%A9\">1. 기본 생성자 사용</a></li>\n<li><a href=\"#2-builder-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%82%AC%EC%9A%A9-%EC%8B%9C-list-%ED%95%84%EB%93%9C-%EC%B4%88%EA%B8%B0%ED%99%94\">2. builder 메서드 사용 시, List 필드 초기화</a></li>\n<li><a href=\"#3-builderdefault-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EC%82%AC%EC%9A%A9\">3. Builder.Default 어노테이션 사용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고 사이트</a></p>\n</li>\n</ul>\n</div>","excerpt":"🚫 에러 상황 builder 패턴을 사용하여 유저 인스턴스를 생성했고, userGroups 필드(List)에 데이터를 추가하자 NullPointException 이 발생했다. java.lang.NullPointerException: Cannot invoke “java.util.List.add(Object)” because the return value of “user.domain.User.getUserGroups()” is null User 엔티티 User 생성 - builder 사용 📜 에러 원인 null 인 리스트에 데이터를 추가할 수 없다는 것이다.\n엔티티에서 리스트 필드를 초기화 했음에도 불구하고 null 인 상황인다.. 의심가는 건 builder 메서드를 사용 시 List 의 값은 입력하지 않았다.\n알아보니 builder 패턴은 엔티티에서 초기화한 값을 무시하고 초기화를 한다. 따라서 builder 패턴 사용 시, 생성된 유저의 List 필드는 아래와 같았을 것이다. 🔑 …","frontmatter":{"date":"May 23, 2023","title":"Builder 어노테이션 사용시, List 추가에 대한 NullPointerException","categories":"블로그 spring","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/builder-annotation-nullpointerexception/"}},"next":{"id":"24d746b8-237e-51a2-a5cf-2d34568b25dc","html":"<p><a href=\"https://vvs-kim.github.io/nextjs-deploy-with-docker-1/\">[docker] node, nextjs 이미지 배포하기 - 1</a>\n이전 게시물과 이어지는 내용입니다.\n추가 설명이 필요한 부분은 이전 게시물을 참고 해주시면 됩니다.</p>\n<h2 id=\"자동화가-필요해\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%8F%99%ED%99%94%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%B4\" aria-label=\"자동화가 필요해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자동화가 필요해..</h2>\n<p>전 게시물에서 node 와 nginx 를 도커 이미지로 생성했고,\n각 컨테이너를 실행하는 쉘 스크립트를 만드는 내용을 작성했습니다.</p>\n<br />\n<h3 id=\"쉘-스크립트를-이용한-수동-배포의-단점\" style=\"position:relative;\"><a href=\"#%EC%89%98-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%88%98%EB%8F%99-%EB%B0%B0%ED%8F%AC%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"쉘 스크립트를 이용한 수동 배포의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쉘 스크립트를 이용한 수동 배포의 단점</h3>\n<p>사용자는</p>\n<ol>\n<li>쉘 스크립트(도커 이미지를 생성하고 HUB에 푸시함) 실행 후 버전 입력</li>\n<li>운영 서버에 접속</li>\n<li>쉘 스크립트(도커 이미지를 pull 받고 컨테이너를 실행함) 실행 후 버전 입력</li>\n</ol>\n<p>이러한 간단한 플로우로 이미지를 배포 및 버전 관리를 할 수 있습니다.\n이러한 플로우에는 사용자는 다음과 같은 단점이 있습니다.</p>\n<ol>\n<li>로컬, 운영서버 각 환경에서 배포하는 이미지의 버전를 입력해야 합니다. (총 2번)</li>\n<li>언제 끝날지 모르는 도커 빌드, 푸시 시간이 끝나기를 기다려야 합니다.</li>\n<li>도커 푸시 후, 서버에 접속해서 이미지를 전송 받아야 합니다.</li>\n</ol>\n<br />\n<h3 id=\"해결책--github-action\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0%EC%B1%85--github-action\" aria-label=\"해결책  github action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결책 = github action</h3>\n<p><strong>자동화를 통해서 한 번의 실행으로 모든 작업을 실행할 수는 없을까?</strong> 고민했습니다.\n이러한 고민을 해결하기 위해 <strong>github action</strong> 을 사용했습니다.</p>\n<p>도커를 사용하기 이전에는 AWS 에서 제공하는 codeDeploy, s3 서비스를 통해서 CI/CD 를 구축했었습니다.\ncodeDeploy 를 사용하면 <strong>ubuntu 버전 호환 문제와 ruby, codeAgent 등을 설치해야 해서 용량을 많이 차지</strong>하는 부분이 불편했습니다.\n또한, S3 로 버전 관리를 하는 것이 아니라 Docker HUB 를 통해서 버전관리를 하므로 S3 를 사용할 이유도 없었습니다.</p>\n<br />\n<h2 id=\"시작하기\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기</h2>\n<h3 id=\"1-dockerfile-수정\" style=\"position:relative;\"><a href=\"#1-dockerfile-%EC%88%98%EC%A0%95\" aria-label=\"1 dockerfile 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Dockerfile 수정</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">FROM node:16.17.0-alpine\n\nRUN <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /app\nWORKDIR /app\nADD ./ /app\n\nRUN <span class=\"token function\">yarn</span> <span class=\"token function\">install</span>   // 변경된 부분\nRUN <span class=\"token function\">yarn</span> build     // 변경된 부분\n\nRUN <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> pm2\n\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"pm2-runtime\"</span>, <span class=\"token string\">\"start\"</span>, <span class=\"token string\">\"ecosystem.config.js\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>도커 Node 이미지를 생성 시 패키지 파일을 생성하고 빌드 파일을 생성하기 위함입니다.</p>\n<br />\n<h3 id=\"2-github-action-secret-변수-생성\" style=\"position:relative;\"><a href=\"#2-github-action-secret-%EB%B3%80%EC%88%98-%EC%83%9D%EC%84%B1\" aria-label=\"2 github action secret 변수 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Github action secret 변수 생성</h3>\n<p>github action 을 사용하기 위해 서버 접속, 도커 로그인 등을 하기 위한\n보안 정보를 github 에 등록하는 단계입니다.</p>\n<h4 id=\"해당-경로로-이동\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EB%8B%B9-%EA%B2%BD%EB%A1%9C%EB%A1%9C-%EC%9D%B4%EB%8F%99\" aria-label=\"해당 경로로 이동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해당 경로로 이동</h4>\n<p>github.com > repository > settings > secrets and variables > actions</p>\n<h4 id=\"해당-변수-추가\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EB%8B%B9-%EB%B3%80%EC%88%98-%EC%B6%94%EA%B0%80\" aria-label=\"해당 변수 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해당 변수 추가</h4>\n<p>REMOTE_IP : 서버 IP <br />\nREMOTE_SSH_PORT : 서버 접속 PORT <br />\nREMOTE_SSH_USER : 서버 접속 계정 <br />\nREMOTE_SSH_KEY : 서버에 접속하기 위한 SSH KEY 의 내용 <br />\nDOCKER_REPOSITORY : 도커 유저명/레포지토리명 <br />\nDOCKER_USERNAME : 도커 유저명 <br />\nDOCKER_PASSWORD : 도커 비밀번호 <br /></p>\n<br />\n<h3 id=\"3-github-action-workflow-파일-생성\" style=\"position:relative;\"><a href=\"#3-github-action-workflow-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"3 github action workflow 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. github action workflow 파일 생성</h3>\n<p>이제 자동 배포 스크립트를 작성하기 위한 준비가 됐습니다.\n해당 경로에 다음 파일을 생성합니다.\n<em>프로젝트/.github/workflows/my_deploy.yml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">name: CI\n\non:\n    push:\n        branches: <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span>\n\njobs:\n    build:\n        runs-on: ubuntu-latest\n        env:\n            VERSION: <span class=\"token number\">1.0</span>.0\n            OS: linux/amd64\n\n        steps:\n            - name: Checkout release\n              uses: actions/checkout@v3\n\n            - name: Set <span class=\"token function\">env</span>\n              run: <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"TAG=<span class=\"token variable\">$VERSION</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$GITHUB_ENV</span>\n\n            - name: Confirm <span class=\"token function\">env</span>\n              run: <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"RELEASE_VERSION=<span class=\"token variable\">${{ env.TAG }</span>}\"</span>\n\n            - name: Login to DockerHub\n              uses: docker/login-action@v1\n              with:\n                  username: <span class=\"token variable\">${{ secrets.DOCKER_USERNAME }</span><span class=\"token punctuation\">}</span>\n                  password: <span class=\"token variable\">${{ secrets.DOCKER_PASSWORD }</span><span class=\"token punctuation\">}</span>\n\n            - name: build and release to DockerHub\n              env:\n                  REPO: <span class=\"token variable\">${{ secrets.DOCKER_REPOSITORY }</span><span class=\"token punctuation\">}</span>\n              run: <span class=\"token operator\">|</span>\n                  <span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-f</span> Dockerfile.prod <span class=\"token parameter variable\">--platform</span> <span class=\"token variable\">$OS</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$REPO</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">${{ env.TAG }</span><span class=\"token punctuation\">}</span> <span class=\"token builtin class-name\">.</span>\n                  <span class=\"token function\">docker</span> push <span class=\"token variable\">$REPO</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">${{ env.TAG }</span><span class=\"token punctuation\">}</span>\n\n            - name: Deploy\n              uses: appleboy/ssh-action@master\n              with:\n                  host: <span class=\"token variable\">${{ secrets.REMOTE_IP }</span><span class=\"token punctuation\">}</span>\n                  username: <span class=\"token variable\">${{ secrets.REMOTE_SSH_USER }</span><span class=\"token punctuation\">}</span>\n                  key: <span class=\"token variable\">${{ secrets.REMOTE_SSH_KEY }</span><span class=\"token punctuation\">}</span>\n                  port: <span class=\"token variable\">${{ secrets.REMOTE_SSH_PORT }</span><span class=\"token punctuation\">}</span>\n                  script: <span class=\"token operator\">|</span>\n                      <span class=\"token function\">docker</span> <span class=\"token function\">ps</span>\n\n                      <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"=>>> docker stop front container....\"</span>\n                      <span class=\"token function\">docker</span> stop <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-q</span> <span class=\"token parameter variable\">-af</span> <span class=\"token string\">\"name=test-front\"</span><span class=\"token variable\">)</span></span>\n\n                      <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"=>>> docker remove front container....\"</span>\n                      <span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-q</span> <span class=\"token parameter variable\">-af</span> <span class=\"token string\">\"name=test-front\"</span><span class=\"token variable\">)</span></span>\n\n                      <span class=\"token function\">docker</span> pull <span class=\"token variable\">${{ secrets.DOCKER_REPOSITORY }</span><span class=\"token punctuation\">}</span>:<span class=\"token variable\">${{ env.TAG }</span><span class=\"token punctuation\">}</span>\n\n                      <span class=\"token builtin class-name\">cd</span> /\n                      <span class=\"token builtin class-name\">pwd</span>\n                      <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span>  <span class=\"token string\">\"5s|.*|        image: <span class=\"token variable\">${{ secrets.DOCKER_REPOSITORY }</span>}:<span class=\"token variable\">${{ env.TAG }</span>}|g\"</span> docker-compose.yml\n\n                      <span class=\"token function\">docker</span> images\n\n                      <span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">-d</span>\n                      <span class=\"token function\">docker</span> image prune <span class=\"token parameter variable\">-af</span>\n                      <span class=\"token function\">docker</span> <span class=\"token function\">ps</span></code></pre></div>\n<br />\n<h4 id=\"githun-action-스크립트-추가-설명\" style=\"position:relative;\"><a href=\"#githun-action-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B6%94%EA%B0%80-%EC%84%A4%EB%AA%85\" aria-label=\"githun action 스크립트 추가 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Githun action 스크립트 추가 설명</h4>\n<p>이전 게시물에서 다룬 내용을 하나의 스크립트로 축약했습니다.</p>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">on:\n    push:\n        branches: [main]\n</code></pre></div>\n<p>main 브랜치로 통합될(push, merge) 시 github action 을 실행하기 위함입니다.</p>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">            - name: Set <span class=\"token function\">env</span>\n              run: <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"TAG=<span class=\"token variable\">$VERSION</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$GITHUB_ENV</span>\n\n            - name: Confirm <span class=\"token function\">env</span>\n              run: <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"RELEASE_VERSION=<span class=\"token variable\">${{ env.TAG }</span>}\"</span></code></pre></div>\n<p>github action 변수를 지정하는 단계입니다.\nenv 필드로 사용할 수도 있지만, 도커 내부에서 사용이 안되므로 이렇게 지정해야 합니다.</p>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">            - name: build and release to DockerHub\n              env:\n                  REPO: <span class=\"token variable\">${{ secrets.DOCKER_REPOSITORY }</span><span class=\"token punctuation\">}</span>\n              run: <span class=\"token operator\">|</span>\n                  <span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-f</span> Dockerfile.prod <span class=\"token parameter variable\">--platform</span> <span class=\"token variable\">$OS</span> <span class=\"token parameter variable\">-t</span> <span class=\"token variable\">$REPO</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">${{ env.TAG }</span><span class=\"token punctuation\">}</span> <span class=\"token builtin class-name\">.</span>\n                  <span class=\"token function\">docker</span> push <span class=\"token variable\">$REPO</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">${{ env.TAG }</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Dockerfile 로 원하는 버전의 이미지를 생성 후 Hub 로 Push 하는 단계입니다.</p>\n<br />\n<h3 id=\"github-action-사용법\" style=\"position:relative;\"><a href=\"#github-action-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"github action 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github action 사용법</h3>\n<ol>\n<li>프로젝트 코드 수정</li>\n<li>my_deploy.yml 파일 내의 버전수정 (ex. 1.0.1)</li>\n<li>main branch 로 병합</li>\n<li>github action 실행됨</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%9E%90%EB%8F%99%ED%99%94%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%B4\">자동화가 필요해..</a></p>\n<ul>\n<li><a href=\"#%EC%89%98-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%88%98%EB%8F%99-%EB%B0%B0%ED%8F%AC%EC%9D%98-%EB%8B%A8%EC%A0%90\">쉘 스크립트를 이용한 수동 배포의 단점</a></li>\n<li><a href=\"#%ED%95%B4%EA%B2%B0%EC%B1%85--github-action\">해결책 = github action</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">시작하기</a></p>\n<ul>\n<li>\n<p><a href=\"#1-dockerfile-%EC%88%98%EC%A0%95\">1. Dockerfile 수정</a></p>\n</li>\n<li>\n<p><a href=\"#2-github-action-secret-%EB%B3%80%EC%88%98-%EC%83%9D%EC%84%B1\">2. Github action secret 변수 생성</a></p>\n<ul>\n<li><a href=\"#%ED%95%B4%EB%8B%B9-%EA%B2%BD%EB%A1%9C%EB%A1%9C-%EC%9D%B4%EB%8F%99\">해당 경로로 이동</a></li>\n<li><a href=\"#%ED%95%B4%EB%8B%B9-%EB%B3%80%EC%88%98-%EC%B6%94%EA%B0%80\">해당 변수 추가</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-github-action-workflow-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">3. github action workflow 파일 생성</a></p>\n<ul>\n<li><a href=\"#githun-action-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B6%94%EA%B0%80-%EC%84%A4%EB%AA%85\">Githun action 스크립트 추가 설명</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#github-action-%EC%82%AC%EC%9A%A9%EB%B2%95\">Github action 사용법</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 25, 2023","title":"docker, nextjs 이미지 배포하기 - 2 (github action 자동 배포)","categories":"블로그 ci/cd docker","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/nextjs-deploy-with-docker-2/"}},"prev":{"id":"fca4a166-672d-5911-9730-c3b3d9c94fa6","html":"<h2 id=\"-적용-이유\" style=\"position:relative;\"><a href=\"#-%EC%A0%81%EC%9A%A9-%EC%9D%B4%EC%9C%A0\" aria-label=\" 적용 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 적용 이유</h2>\n<p>프론트엔드 개발자는 백엔드 개발자가 작성한 api 문서를 보고 api 를 매핑합니다.\n문서를 작성하는 것은 노동력이 들어가는 것이고, 사람이 작성하기 때문에 변경된 사항을 업데이트를 하지 않는 경우도 존재합니다.\nspring-rest-docs 는 테스트 코드를 작성해야 하고, 빌드 시 api 문서가 자동으로 생성됩니다.</p>\n<p><strong>테스트 코드를 작성하면서 검증된 api 문서를 자동으로 생성할 수 있다!</strong></p>\n<h3 id=\"vs-swagger\" style=\"position:relative;\"><a href=\"#vs-swagger\" aria-label=\"vs swagger permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vs Swagger</h3>\n<p>Swagger 도 문서화를 위해 많이 사용된다고 했습니다.\n보다 UI 가 깔끔해보이는 장점이 있었습니다. spring-rest-docs 와 달리 테스트 코드가 의무가 아니므로 빠른 시간 내의 문서를 작성할 때 용이할 거라 생각이 듭니다.\n단점으로는 컨트롤러 코드 주위에 문서를 위한 코드를 작성해야 된다는 점입니다.\n가독성이 중요하다고 판단되어 spring-rest-docs 를 사용하기로 결정했습니다.</p>\n<br />\n<h2 id=\"️-적용-하기\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%A0%81%EC%9A%A9-%ED%95%98%EA%B8%B0\" aria-label=\"️ 적용 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚙️ 적용 하기</h2>\n<h3 id=\"1-buildgradle\" style=\"position:relative;\"><a href=\"#1-buildgradle\" aria-label=\"1 buildgradle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. build.gradle</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\nplugins <span class=\"token punctuation\">{</span>\n\tid <span class=\"token string\">\"org.asciidoctor.jvm.convert\"</span> version <span class=\"token string\">\"3.3.2\"</span>\n<span class=\"token punctuation\">}</span>\n\next <span class=\"token punctuation\">{</span>\n\tsnippetsDir <span class=\"token operator\">=</span> <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>'build<span class=\"token operator\">/</span>generated<span class=\"token operator\">-</span>snippets'<span class=\"token punctuation\">)</span> <span class=\"token comment\">// -- 1 --</span>\n<span class=\"token punctuation\">}</span>\n\ndependencies <span class=\"token punctuation\">{</span>\n\ttestImplementation 'org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>restdocs<span class=\"token operator\">:</span>spring<span class=\"token operator\">-</span>restdocs<span class=\"token operator\">-</span>mockmvc'\n<span class=\"token punctuation\">}</span>\n\ntest <span class=\"token punctuation\">{</span>\n\toutputs<span class=\"token punctuation\">.</span>dir snippetsDir\n<span class=\"token punctuation\">}</span>\n\nasciidoctor <span class=\"token punctuation\">{</span>\n\tdependsOn test\n\tinputs<span class=\"token punctuation\">.</span>dir snippetsDir\n<span class=\"token punctuation\">}</span>\n\nasciidoctor<span class=\"token punctuation\">.</span>doFirst <span class=\"token punctuation\">{</span>\n\tdelete <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>'src<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>resources<span class=\"token operator\">/</span><span class=\"token keyword\">static</span><span class=\"token operator\">/</span>docs'<span class=\"token punctuation\">)</span> <span class=\"token comment\">// -- 2 --</span>\n<span class=\"token punctuation\">}</span>\n\ntask <span class=\"token function\">copyDocument</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> <span class=\"token class-name\">Copy</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdependsOn asciidoctor\n\tfrom <span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"build/docs/asciidoc\"</span><span class=\"token punctuation\">)</span>\n\tinto <span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/main/resources/static/docs\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -- 3 --</span>\n<span class=\"token punctuation\">}</span>\n\nbuild <span class=\"token punctuation\">{</span>\n\tdependsOn copyDocument\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>build 시 자동생성될 snippet 의 저장 경로 (ex. request-body)</li>\n<li>asciidoctor 가 실행되면 우선적으로 저장된 문서를 삭제한다. (초기화)</li>\n<li>asciidoctor 실행 시 생성되는 index.html 을 정적 경로로 이동</li>\n</ol>\n<br />\n<h3 id=\"2-mockmvc--restdocs-설정\" style=\"position:relative;\"><a href=\"#2-mockmvc--restdocs-%EC%84%A4%EC%A0%95\" aria-label=\"2 mockmvc  restdocs 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. MockMvc &#x26; restdocs 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token annotation punctuation\">@ExtendWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RestDocumentationExtension</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringContainerTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">MockMvc</span> mockMvc<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@BeforeEach</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebApplicationContext</span> webApplicationContext<span class=\"token punctuation\">,</span>\n                      <span class=\"token class-name\">RestDocumentationContextProvider</span> restDocumentationContextProvider<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mockMvc <span class=\"token operator\">=</span> <span class=\"token class-name\">MockMvcBuilders</span><span class=\"token punctuation\">.</span><span class=\"token function\">webAppContextSetup</span><span class=\"token punctuation\">(</span>webApplicationContext<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token function\">documentationConfiguration</span><span class=\"token punctuation\">(</span>restDocumentationContextProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>기존 컨트롤러 테스트에서 추가된 부분은 apply(documentationConfiguration(restDocumentationContextProvider)) 입니다.</p>\n<p><strong>RestDocumentationContextProvider</strong>: RestDocumentationContext 에 대한 액세스 접근을 제공하는 인터페이스\n<strong>RestDocumentationContext</strong>: RESTful API의 문서화가 수행되는 컨텍스트 인터페이스</p>\n<br />\n<h3 id=\"3-컨트롤러-테스트-작성\" style=\"position:relative;\"><a href=\"#3-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1\" aria-label=\"3 컨트롤러 테스트 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 컨트롤러 테스트 작성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GroupControllerTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SpringContainerTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token annotation punctuation\">@Transactional</span>\n    <span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그룹 리스트 조회\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getGroupList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\n        mockMvc<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/groups\"</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">contentType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isOk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">andDo</span><span class=\"token punctuation\">(</span><span class=\"token function\">document</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get-groups\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">PayloadDocumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">responseFields</span><span class=\"token punctuation\">(</span>\n                                <span class=\"token class-name\">PayloadDocumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">fieldWithPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"성공 여부\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">PayloadDocumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">fieldWithPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result.[].groupId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그룹 아이디\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">PayloadDocumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">fieldWithPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result.[].groupName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그룹 이름\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">PayloadDocumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">fieldWithPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result.[].totalUsers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그룹 인원수\"</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>상속받은 MockMvc 를 사용하여 작성했습니다.\n요청 파라미터 및 데이터가 없기 때문에 응답 필드값과 설명값을 추가했습니다.</p>\n<br />\n<h3 id=\"4-문서-스니펫-생성-확인\" style=\"position:relative;\"><a href=\"#4-%EB%AC%B8%EC%84%9C-%EC%8A%A4%EB%8B%88%ED%8E%AB-%EC%83%9D%EC%84%B1-%ED%99%95%EC%9D%B8\" aria-label=\"4 문서 스니펫 생성 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 문서 스니펫 생성 확인</h3>\n<p>작성한 테스트를 실행합니다. 테스트가 성공적으로 끝났다면, build 폴더가 생길 것입니다.\n요청 필드 값은 입력하지 않았으므로 request-fileds 를 제외한 나머지 스니펫이 생성됐습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">my@notebook build % tree\n<span class=\"token builtin class-name\">.</span>\n└── generated-snippets\n    └── get-groups\n        ├── curl-request.adoc\n        ├── http-request.adoc\n        ├── http-response.adoc\n        ├── httpie-request.adoc\n        ├── request-body.adoc\n        ├── response-body.adoc\n        └── response-fields.adoc\n\n<span class=\"token number\">3</span> directories, <span class=\"token number\">7</span> files</code></pre></div>\n<br />\n<h3 id=\"5-indexadoc-파일-작성\" style=\"position:relative;\"><a href=\"#5-indexadoc-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\" aria-label=\"5 indexadoc 파일 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. index.adoc 파일 작성</h3>\n<p>src/docs/asciidoc/index.adoc 파일을 생성합니다.\n문서에 넣고 싶은 스니펫을 작성합니다.\nasciidoc 가 adoc 파일을 스타일링 해서 html 파일로 변환시켜줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ifndef::snippets<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n:snippets: ./build/generated-snippets\nendif::<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">=</span> API Docs\n:doctype: book\n:icons: font\n:source-highlighter: highlightjs\n:toc: left\n:toclevels: <span class=\"token number\">1</span>\n:toc-title: 그룹\n\n<span class=\"token operator\">==</span> 그룹 리스트 조회\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> REQUEST\n\ninclude::<span class=\"token punctuation\">{</span>snippets<span class=\"token punctuation\">}</span>/get-groups/http-request.adoc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> REQEUST FIELD\n\n// include::<span class=\"token punctuation\">{</span>snippets<span class=\"token punctuation\">}</span>/get-groups/request-fields.adoc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>F\n\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RESPONSE\n\ninclude::<span class=\"token punctuation\">{</span>snippets<span class=\"token punctuation\">}</span>/get-groups/http-response.adoc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RESPONSE FIELD\n\ninclude::<span class=\"token punctuation\">{</span>snippets<span class=\"token punctuation\">}</span>/get-groups/response-fields.adoc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br />\n<h3 id=\"6-build-및-문서-확인\" style=\"position:relative;\"><a href=\"#6-build-%EB%B0%8F-%EB%AC%B8%EC%84%9C-%ED%99%95%EC%9D%B8\" aria-label=\"6 build 및 문서 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. build 및 문서 확인</h3>\n<p>문서 저장경로인 src/main/resources/static/docs 에 index.html 이 존재하는지 확인합니다.\n<a href=\"http://localhost:8080/docs/index.html\">http://localhost:8080/docs/index.html</a> 로 이동하면..!\n<img src=\"https://velog.velcdn.com/images/kws60000/post/5a1135e2-2ced-4690-a02c-fc469d6e2c3a/image.png\" alt=\"\"></p>\n<p>만약 스니펫의 정보가 잘 나오지 않는다면 index.adoc 파일에서 작성한 스니펫 경로가 올바른지 확인해야 합니다.</p>\n<br />\n<h2 id=\"-마치며\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\" 마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📄 마치며..</h2>\n<p>초기 설정만 하면 이후 문서화를 하는 것은 (테스트 코드를 작성한다는 전제) 어렵지 않아 보입니다. <strong>협업하는 개발자에게 검증된 api를 제공한다는 것만으로도 충분히 가치가 있다고 생각합니다.</strong> 기존에 사용하던 노션에 비해서 가독성이 떨어지는 단점은 있었습니다. 다른 사용자들은 swagger ui 를 연동해서 이를 보완한다고 해서 이후에 적용하려 합니다.</p>\n<br />\n<h3 id=\"참고-사이트\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"참고 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 사이트</h3>\n<p><a href=\"https://velog.io/@bagt/API-%EB%AC%B8%EC%84%9C%ED%99%94%EC%99%80-Spring-Rest-Docs\">https://velog.io/@bagt/API-%EB%AC%B8%EC%84%9C%ED%99%94%EC%99%80-Spring-Rest-Docs</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%A0%81%EC%9A%A9-%EC%9D%B4%EC%9C%A0\">🤔 적용 이유</a></p>\n<ul>\n<li><a href=\"#vs-swagger\">vs Swagger</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%A0%81%EC%9A%A9-%ED%95%98%EA%B8%B0\">⚙️ 적용 하기</a></p>\n<ul>\n<li><a href=\"#1-buildgradle\">1. build.gradle</a></li>\n<li><a href=\"#2-mockmvc--restdocs-%EC%84%A4%EC%A0%95\">2. MockMvc &#x26; restdocs 설정</a></li>\n<li><a href=\"#3-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1\">3. 컨트롤러 테스트 작성</a></li>\n<li><a href=\"#4-%EB%AC%B8%EC%84%9C-%EC%8A%A4%EB%8B%88%ED%8E%AB-%EC%83%9D%EC%84%B1-%ED%99%95%EC%9D%B8\">4. 문서 스니펫 생성 확인</a></li>\n<li><a href=\"#5-indexadoc-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\">5. index.adoc 파일 작성</a></li>\n<li><a href=\"#6-build-%EB%B0%8F-%EB%AC%B8%EC%84%9C-%ED%99%95%EC%9D%B8\">6. build 및 문서 확인</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A7%88%EC%B9%98%EB%A9%B0\">📄 마치며..</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8\">참고 사이트</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 01, 2023","title":"Spring rest docs 설정","categories":"블로그 spring","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/spring-rest-docs/"}},"site":{"siteMetadata":{"siteUrl":"https://vvs-kim.github.io","comments":{"utterances":{"repo":"vvs-kim/vvs-kim.github.io"}}}}},"pageContext":{"slug":"/builder-annotation-nullpointerexception/","nextSlug":"/nextjs-deploy-with-docker-2/","prevSlug":"/spring-rest-docs/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}