{"componentChunkName":"component---src-templates-blog-template-js","path":"/ssl-setting/","result":{"data":{"cur":{"id":"183c814b-b404-518d-9a97-fa9cfcc35bfc","html":"<h2 id=\"1---csr-생성\" style=\"position:relative;\"><a href=\"#1---csr-%EC%83%9D%EC%84%B1\" aria-label=\"1   csr 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1 - CSR 생성</h2>\n<blockquote>\n<p>mac → 키체인 접근 → 인증서 지원 -> 인증기관에서 인증서 요청</p>\n</blockquote>\n<br />\n<h2 id=\"2---dns-검증\" style=\"position:relative;\"><a href=\"#2---dns-%EA%B2%80%EC%A6%9D\" aria-label=\"2   dns 검증 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2 - DNS 검증</h2>\n<p>SSL 인증서를 발급하기 전에, 해당 도메인의 소유주가 맞는 지 확인하는 검증 단계입니다.\n도메인 구입 사이트 또는 호스팅 사이트에서 cname 등록인 필요합니다. (ex. aws route53, gabia 등)\n하루를 기다려도 검증이 안될 시 잘못 입력한 부분이 있는지 확인해야 합니다.</p>\n<blockquote>\n<p>Type: CNAME Record\nHost: CNAME\nValue: CNAME value\nTTL: Automatic</p>\n</blockquote>\n<p>🚫 주의할점: Host 입력 시 도메인 제거 후 입력할 것!</p>\n<br />\n<h2 id=\"3---ssl-인증서-다운로드\" style=\"position:relative;\"><a href=\"#3---ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C\" aria-label=\"3   ssl 인증서 다운로드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3 - SSL 인증서 다운로드</h2>\n<blockquote>\n<p>DNS 검증 완료 시 구매 사이트로부터 다운로드</p>\n</blockquote>\n<br />\n<h2 id=\"4---chain-파일-생성-필요-시\" style=\"position:relative;\"><a href=\"#4---chain-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%95%84%EC%9A%94-%EC%8B%9C\" aria-label=\"4   chain 파일 생성 필요 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4 - chain 파일 생성 (필요 시)</h2>\n<blockquote>\n<p><a href=\"https://decoder.link/result\">SSL &#x26; CSR Decoder</a></p>\n</blockquote>\n<ol>\n<li>접속 후 CSR 입력 후 DECODE</li>\n<li>Bundle (Nginx) 다운로드</li>\n</ol>\n<br />\n<h2 id=\"5---개인키-파일-생성\" style=\"position:relative;\"><a href=\"#5---%EA%B0%9C%EC%9D%B8%ED%82%A4-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"5   개인키 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5 - 개인키 파일 생성</h2>\n<blockquote>\n<p>mac → 키체인 접근 → 도메인 검색(ex. google.com) → 개인키 우클릭 → 내보내기(.p12 파일)</p>\n</blockquote>\n<br />\n<h2 id=\"6---p12-파일을-key-파일로-변환\" style=\"position:relative;\"><a href=\"#6---p12-%ED%8C%8C%EC%9D%BC%EC%9D%84-key-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%B3%80%ED%99%98\" aria-label=\"6   p12 파일을 key 파일로 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6 - p12 파일을 key 파일로 변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl pkcs12 <span class=\"token parameter variable\">-in</span> your_domain.p12 <span class=\"token parameter variable\">-nodes</span> <span class=\"token parameter variable\">-out</span> your_domain.key <span class=\"token parameter variable\">-nocerts</span></code></pre></div>\n<br />\n<h2 id=\"7---인증-파일을-nginx-로-이동\" style=\"position:relative;\"><a href=\"#7---%EC%9D%B8%EC%A6%9D-%ED%8C%8C%EC%9D%BC%EC%9D%84-nginx-%EB%A1%9C-%EC%9D%B4%EB%8F%99\" aria-label=\"7   인증 파일을 nginx 로 이동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7 - 인증 파일을 nginx 로 이동</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>lss <span class=\"token operator\">/</span>\n  certs <span class=\"token operator\">/</span>\n  your_domain_chain<span class=\"token punctuation\">.</span>crt <span class=\"token operator\">/</span> <span class=\"token comment\">// 체인</span>\n  etc <span class=\"token operator\">/</span>\n  ssl <span class=\"token operator\">/</span>\n  certs <span class=\"token operator\">/</span>\n  your_domain_private<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 개인키</span></code></pre></div>\n<br />\n<h2 id=\"8---nginx-설정\" style=\"position:relative;\"><a href=\"#8---nginx-%EC%84%A4%EC%A0%95\" aria-label=\"8   nginx 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8 - Nginx 설정</h2>\n<ol>\n<li>설정 파일 생성</li>\n<li>http → https 리다이렉트 설정</li>\n<li>인증서 위치 설정(ssl_certificate, ssl_certificate_key)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// /etc/nginx/conf.d/default.conf\n\nserver <span class=\"token punctuation\">{</span>\n\tlisten <span class=\"token number\">80</span> default_server<span class=\"token punctuation\">;</span>\n\tlisten <span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:80 default_server<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin class-name\">return</span> <span class=\"token number\">301</span> https://your_domain<span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nserver <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">443</span> ssl<span class=\"token punctuation\">;</span>\n\n    ssl_certificate /etc/ssl/certs/your_domain_chain.crt<span class=\"token punctuation\">;</span>\n    ssl_certificate_key /etc/ssl/certs/your_domain_private.key<span class=\"token punctuation\">;</span>\n\n\troot /var/www/html<span class=\"token punctuation\">;</span>\n\n\tindex index.html index.htm index.nginx-debian.html<span class=\"token punctuation\">;</span>\n\n\tlocation / <span class=\"token punctuation\">{</span>\n\t\ttry_files <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span>/ <span class=\"token operator\">=</span><span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n    server_name your_domain www.your_domain<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// nginx 문법 테스트</span>\n\nsudo nginx <span class=\"token operator\">-</span>t\n\n<span class=\"token literal-property property\">nginx</span><span class=\"token operator\">:</span> the configuration file <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>nginx<span class=\"token punctuation\">.</span>conf syntax is ok\n<span class=\"token literal-property property\">nginx</span><span class=\"token operator\">:</span> configuration file <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>nginx<span class=\"token punctuation\">.</span>conf test is successful</code></pre></div>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// nginx 재실행</span>\n\nsudo service nginx restart</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1---csr-%EC%83%9D%EC%84%B1\">1 - CSR 생성</a></li>\n<li><a href=\"#2---dns-%EA%B2%80%EC%A6%9D\">2 - DNS 검증</a></li>\n<li><a href=\"#3---ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C\">3 - SSL 인증서 다운로드</a></li>\n<li><a href=\"#4---chain-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%95%84%EC%9A%94-%EC%8B%9C\">4 - chain 파일 생성 (필요 시)</a></li>\n<li><a href=\"#5---%EA%B0%9C%EC%9D%B8%ED%82%A4-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">5 - 개인키 파일 생성</a></li>\n<li><a href=\"#6---p12-%ED%8C%8C%EC%9D%BC%EC%9D%84-key-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%B3%80%ED%99%98\">6 - p12 파일을 key 파일로 변환</a></li>\n<li><a href=\"#7---%EC%9D%B8%EC%A6%9D-%ED%8C%8C%EC%9D%BC%EC%9D%84-nginx-%EB%A1%9C-%EC%9D%B4%EB%8F%99\">7 - 인증 파일을 nginx 로 이동</a></li>\n<li><a href=\"#8---nginx-%EC%84%A4%EC%A0%95\">8 - Nginx 설정</a></li>\n</ul>\n</div>","excerpt":"1 - CSR 생성 mac → 키체인 접근 → 인증서 지원 -> 인증기관에서 인증서 요청 2 - DNS 검증 SSL 인증서를 발급하기 전에, 해당 도메인의 소유주가 맞는 지 확인하는 검증 단계입니다.\n도메인 구입 사이트 또는 호스팅 사이트에서 cname 등록인 필요합니다. (ex. aws route53, gabia 등)\n하루를 기다려도 검증이 안될 시 잘못 입력한 부분이 있는지 확인해야 합니다. Type: CNAME Record\nHost: CNAME\nValue: CNAME value\nTTL: Automatic 🚫 주의할점: Host 입력 시 도메인 제거 후 입력할 것! 3 - SSL 인증서 다운로드 DNS 검증 완료 시 구매 사이트로부터 다운로드 4 - chain 파일 생성 (필요 시) SSL & CSR Decoder 접속 후 CSR 입력 후 DECODE Bundle (Nginx) 다운로드 5 - 개인키 파일 생성 mac → 키체인 접근 → 도메인 검색(ex. google.com)…","frontmatter":{"date":"December 15, 2022","title":"SSL 인증(DNS, Nginx)","categories":"블로그 web","author":"vvs-kim","emoji":"📓"},"fields":{"slug":"/ssl-setting/"}},"next":{"id":"25e4d646-4eb3-539a-8b86-7cec34e6ed3f","html":"<h2 id=\"1---들어가기-앞서\" style=\"position:relative;\"><a href=\"#1---%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C\" aria-label=\"1   들어가기 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1 - 들어가기 앞서..</h2>\n<p>팀원과 컨벤션 정의 및 lint 규칙을 정하는 상황이 있습니다.\n그런데 작업을 하다 보면 서로 코드 컨벤션에 소홀해지는 경우가 있습니다.\n이런 상황일 때, 사용하면 좋은 도구가 <strong>husky</strong> 입니다.</p>\n<blockquote>\n<p>husky 를 사용하면 커밋 전, 푸시 전 등 git hooks 상황에 맞게 코드 규칙을 강제할 수 있습니다.</p>\n</blockquote>\n<br />\n<h2 id=\"2---용어-및-도구-정리\" style=\"position:relative;\"><a href=\"#2---%EC%9A%A9%EC%96%B4-%EB%B0%8F-%EB%8F%84%EA%B5%AC-%EC%A0%95%EB%A6%AC\" aria-label=\"2   용어 및 도구 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2 - 용어 및 도구 정리</h2>\n<br />\n<h3 id=\"git-hooks\" style=\"position:relative;\"><a href=\"#git-hooks\" aria-label=\"git hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git hooks</h3>\n<blockquote>\n<p>git 과 관련한 이벤트가 발생했을 때, 추가 스크립트를 실행하는 기능</p>\n</blockquote>\n<p>git hooks 는 클라이언트 훅과 서버 훅으로 나뉩니다.\n클라이언트 훅은 git 이벤트를 실행 시, 실행자의 컴퓨터에서 실행하는 훅입니다.\n서버 훅은 git 이벤트를 실행 시, 타 서버에서 실행하는 훅입니다.\n.git/hooks 폴더 내부에 보면 각 훅을 확인할 수 있습니다.</p>\n<br />\n<h3 id=\"husky\" style=\"position:relative;\"><a href=\"#husky\" aria-label=\"husky permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>husky</h3>\n<blockquote>\n<p>git hooks 를 편리하게 사용하도록 도와주는 도구</p>\n</blockquote>\n<p>git 이벤트 실행자는 클라이언트 훅을 사용할 수 있습니다.\n.git/hooks 폴더 내부에 존재하는 클라이언트 훅을 사용해도 되지만, 버전관리가 되지 않습니다.\n이에 대한 대안으로 husky 를 사용합니다.</p>\n<br />\n<h3 id=\"lint-staged\" style=\"position:relative;\"><a href=\"#lint-staged\" aria-label=\"lint staged permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lint-staged</h3>\n<blockquote>\n<p>stage 된 상태의 git 파일에 대해 lint 및 추가 명령어를 실행해주는 라이브러리</p>\n</blockquote>\n<p>git hook 과 husky 가 무엇인지 알았습니다. 그렇다면 언제 코드를 관리하는 것일까요?\n상황마다 다르겠지만, 스테이징 된 코드를 커밋하기 전에 점검하는 예제가 많았습니다.</p>\n<blockquote>\n<p>git add -> <strong>pre-commit</strong> -> commit</p>\n</blockquote>\n<p>커밋되기 전에 스테이징 된 git 파일을 검사하고, 이상이 있을 시에는 커밋이 되지 않습니다.\n이러한 과정을 도와주는 라이브러리입니다.</p>\n<br />\n<h3 id=\"mrm\" style=\"position:relative;\"><a href=\"#mrm\" aria-label=\"mrm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mrm</h3>\n<p><a href=\"https://www.npmjs.com/package/mrm\">https://www.npmjs.com/package/mrm</a></p>\n<blockquote>\n<p>오픈 소스 프로젝트의 구성을 동기화하는 데 도음이 되는 명령줄 도구입니다. <br />\nCommand line tool to help you keep configuration (package.json, .gitignore, .eslintrc, etc.) of your open source projects in sync.</p>\n</blockquote>\n<p>husky 와 lint-staged 모듈을 간편하게 설정하기 위해 사용합니다\n해당 모듈이 설치 시 husky 와 lint-staged 를 설치하며, husky 를 실행하기 위한 shell 스크립트가 폴더가 생성됩니다.\nlint-staged 이외에도 jest, dependabot 등을 지원합니다.</p>\n<br />\n<h2 id=\"3---사용방법\" style=\"position:relative;\"><a href=\"#3---%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95\" aria-label=\"3   사용방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3 - 사용방법</h2>\n<p>react, next 등 생성된 프로젝트 내부에서 시작하시면 됩니다.</p>\n<h3 id=\"31---husky-lint-staged-설치\" style=\"position:relative;\"><a href=\"#31---husky-lint-staged-%EC%84%A4%EC%B9%98\" aria-label=\"31   husky lint staged 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 - husky, lint-staged 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx mrm lint-staged</code></pre></div>\n<p>.husky 폴더 내부에 husky 실행 쉘이 생성됩니다.\n<br /></p>\n<p>package.json 에 lint-staged 스크립트가 추가 되었을 것입니다.\n해당 스크립트는 staged 된 파일에 대해 추가 명령어를 실행하는 스크립트입니다.\n사용하는 언어에 따라 변경하면 됩니다.\n저는 ts, tsx 파일에 대해 lint 를 적용하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 변경 전\n    },\n    \"lint-staged\": {\n        \"*.js\": \"eslint --cache --fix\"\n    }\n\n// 변경 후\n    },\n    \"lint-staged\": {\n        \"*.{ts,tsx}\": [\n            \"eslint --fix\",\n            \"prettier --write\"\n        ]\n    }</code></pre></div>\n<p>만약 yarn 패키지 매니저를 사용하신다면,\n.husky/pre-commit 파일을 다음과 같이 변경하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 변경 전\n##!/bin/sh\n. \"$(dirname \"$0\")/_/husky.sh\"\n\nnpx lint-staged\n\n// 변경 후\n##!/bin/sh\n. \"$(dirname \"$0\")/_/husky.sh\"\n\nyarn lint-staged</code></pre></div>\n<br />\n<h3 id=\"32---husky-적용-테스트\" style=\"position:relative;\"><a href=\"#32---husky-%EC%A0%81%EC%9A%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"32   husky 적용 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 - husky 적용 테스트</h3>\n<p>모두 적용했으니 오류 케이스를 생성후 테스트 하겠습니다.</p>\n<h4 id=\"321---오류-케이스-생성\" style=\"position:relative;\"><a href=\"#321---%EC%98%A4%EB%A5%98-%EC%BC%80%EC%9D%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"321   오류 케이스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.1 - 오류 케이스 생성</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 오류 케이스 - index.tsx\n\nimport React from 'react';\nimport MapView from '../components/map/MapView';\nimport SearchModal from '../components/search/SearchModal';\n\nconst Home = () => {\n    return (\n            &lt;SearchModal />\n            &lt;MapView />\n    );\n};\n\nexport default Home;</code></pre></div>\n<p>해당 tsx 파일은 부모로 감싸주는 태그가 없기 때문에 eslint 에러를 발생시켜야 합니다.</p>\n<h4 id=\"322---오류-케이스-테스트\" style=\"position:relative;\"><a href=\"#322---%EC%98%A4%EB%A5%98-%EC%BC%80%EC%9D%B4%EC%8A%A4-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"322   오류 케이스 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.2 - 오류 케이스 테스트</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 1. 스테이징\ngit add .\n\n// 2. 테스트\nyarn lint-staged // yarn 사용 시\nnpx lint-staged // npm 사용 시</code></pre></div>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">yarn</span> lint-staged\n✔ Preparing lint-staged<span class=\"token punctuation\">..</span>.\n❯ Running tasks <span class=\"token keyword\">for</span> staged files<span class=\"token punctuation\">..</span>.\n  ❯ package.json — <span class=\"token number\">57</span> files\n    ❯ *.<span class=\"token punctuation\">{</span>ts,tsx<span class=\"token punctuation\">}</span> — <span class=\"token number\">1</span> <span class=\"token function\">file</span>\n      ✖ eslint <span class=\"token parameter variable\">--fix</span> <span class=\"token punctuation\">[</span>FAILED<span class=\"token punctuation\">]</span>\n      ◼ prettier <span class=\"token parameter variable\">--write</span>\n↓ Skipped because of errors from tasks. <span class=\"token punctuation\">[</span>SKIPPED<span class=\"token punctuation\">]</span>\n✔ Reverting to original state because of errors<span class=\"token punctuation\">..</span>.\n✔ Cleaning up temporary files<span class=\"token punctuation\">..</span>.\n\n✖ eslint --fix:\n\n/Users/ws/with-eat/pages/index.tsx\n  <span class=\"token number\">7</span>:12  error  Parsing error: JSX expressions must have one parent element\n\n✖ <span class=\"token number\">1</span> problem <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> error, <span class=\"token number\">0</span> warnings<span class=\"token punctuation\">)</span></code></pre></div>\n<p>eslint 에러가 발생했으니 성공입니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git commit</code></pre></div>\n<p>커밋을 해도 같은 메시지가 뜨는 지 확인해보고 오류가 뜬다면 설정은 끝났습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1---%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C\">1 - 들어가기 앞서..</a></p>\n</li>\n<li>\n<p><a href=\"#2---%EC%9A%A9%EC%96%B4-%EB%B0%8F-%EB%8F%84%EA%B5%AC-%EC%A0%95%EB%A6%AC\">2 - 용어 및 도구 정리</a></p>\n<ul>\n<li><a href=\"#git-hooks\">git hooks</a></li>\n<li><a href=\"#husky\">husky</a></li>\n<li><a href=\"#lint-staged\">lint-staged</a></li>\n<li><a href=\"#mrm\">mrm</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3---%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95\">3 - 사용방법</a></p>\n<ul>\n<li>\n<p><a href=\"#31---husky-lint-staged-%EC%84%A4%EC%B9%98\">3.1 - husky, lint-staged 설치</a></p>\n</li>\n<li>\n<p><a href=\"#32---husky-%EC%A0%81%EC%9A%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8\">3.2 - husky 적용 테스트</a></p>\n<ul>\n<li><a href=\"#321---%EC%98%A4%EB%A5%98-%EC%BC%80%EC%9D%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\">3.2.1 - 오류 케이스 생성</a></li>\n<li><a href=\"#322---%EC%98%A4%EB%A5%98-%EC%BC%80%EC%9D%B4%EC%8A%A4-%ED%85%8C%EC%8A%A4%ED%8A%B8\">3.2.2 - 오류 케이스 테스트</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 06, 2022","title":"git hooks 를 husky 로 제어하기 (eslint, pre-commit)","categories":"블로그 frontend","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/git-hooks-husky-with-eslint/"}},"prev":{"id":"633db344-14f1-5a2f-bc5f-09cb2e435fc9","html":"<h2 id=\"github-action-\" style=\"position:relative;\"><a href=\"#github-action-\" aria-label=\"github action  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>github action ?</h2>\n<p>jenkins 와 더불어 CI/CD 구축을 위해 사용됩니다.\ngithub 에서 가상환경을 제공해줍니다.</p>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<p>CI 를 위한 추가 서버가 필요 없다는 게 큰 장점이었습니다.\ngit hook 에 따라 배포를 실행할 수 있습니다.</p>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<p>유료 계정이 아니라서 그런지 몰라도 빌드 시간이 오래걸렸습니다.\njenkins 로 배포할 때 총 20초 정도 걸렸었는데, 2분 정도 소요됐습니다. (s3 업로드 까지)</p>\n<br />\n<h2 id=\"시작하기\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기</h2>\n<p>과정을 간단하게 요약한 글입니다\n보다 상세한 내용은 해당 글을 보시는걸 추천드립니다.\n<a href=\"https://blog.bespinglobal.com/post/github-action-%EC%9C%BC%EB%A1%9C-ec2-%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/\">https://blog.bespinglobal.com/post/github-action-%EC%9C%BC%EB%A1%9C-ec2-%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</a></p>\n<br />\n<h3 id=\"1-iam-사용자-추가\" style=\"position:relative;\"><a href=\"#1-iam-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%B6%94%EA%B0%80\" aria-label=\"1 iam 사용자 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. IAM 사용자 추가</h3>\n<p>github 코드를 s3 로 업로드하기 위해 인증된 사용자라는 검증하기 위해 사용됩니다.</p>\n<blockquote>\n</blockquote>\n<ol>\n<li>AWS - IAM > AWS 자격 증명 유형 선택 > 액세스 키 – 프로그래밍 방식 액세스</li>\n<li>GIHUB - 생성한 액세스 키 ID 와 비밀 액세스키를 자신의 레포지토리에 등록</li>\n</ol>\n<br />\n<h3 id=\"2-s3-버킷-생성\" style=\"position:relative;\"><a href=\"#2-s3-%EB%B2%84%ED%82%B7-%EC%83%9D%EC%84%B1\" aria-label=\"2 s3 버킷 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. S3 버킷 생성</h3>\n<p>github 로부터 수신된 빌드파일(압축형태)을 저장합니다.\n향후에 스냅샷으로 버전관리를 위해 사용할 수도 있습니다.</p>\n<blockquote>\n<p>ec2 용 버킷 생성</p>\n</blockquote>\n<br />\n<h3 id=\"3-iam-역할-생성\" style=\"position:relative;\"><a href=\"#3-iam-%EC%97%AD%ED%95%A0-%EC%83%9D%EC%84%B1\" aria-label=\"3 iam 역할 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. IAM 역할 생성</h3>\n<p>aws 에서 자동배포를 하기 위해 codedeploy 라는 서비스를 사용합니다.\n이때, codedeploy 가 ec2 에 접근해도 되는 역할(서비스)이 맞는지 검증기 위해 사용합니다.</p>\n<blockquote>\n<p>AWS - IAM > 역할 > 신뢰관계 > 신뢰 정책 편집 > 아래의 코드 복사 붙여넣기</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": [\n                    \"ec2.amazonaws.com\",\n                    \"codedeploy.amazonaws.com\"\n                ]\n            },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\n</code></pre></div>\n<br />\n<h3 id=\"4-codedeploy-배포-그룹-및-애플리케이션-생성\" style=\"position:relative;\"><a href=\"#4-codedeploy-%EB%B0%B0%ED%8F%AC-%EA%B7%B8%EB%A3%B9-%EB%B0%8F-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%83%9D%EC%84%B1\" aria-label=\"4 codedeploy 배포 그룹 및 애플리케이션 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Codedeploy 배포 그룹 및 애플리케이션 생성</h3>\n<p>aws 에서 지원하는 자동배포 서비스입니다.\n배포 진행상황을 모니터링할 수 있습니다. 문제가 생길시 재시도 하고 이력을 확인할 수 있습니다.</p>\n<blockquote>\n<p>AWS - Codedeploy > 애플리케이션 생성</p>\n</blockquote>\n<p>배포 그룹 및 애플리케이션을 생성합니다.\n주의할 점은 배포 그룹 생성 시 전 단계에서 진행한 IAM 역할을 입력하는 것입니다.</p>\n<br />\n<h3 id=\"5-codedeploy-agent-설치하기\" style=\"position:relative;\"><a href=\"#5-codedeploy-agent-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"5 codedeploy agent 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. CodeDeploy agent 설치하기</h3>\n<p>CodeDeploy 서비스를 사용하기 위해서 ec2 인스턴스 내에 agent 를 설치해야 합니다.\nCodeDeploy agent 를 사용하여, 이전 버전에 대한 스냅샷을 ec2 에 자동 저장함으로서(최대 5개) 배포에 문제가 생길 시 백업할 수 있습니다.</p>\n<p>ec2 ubuntu 20 버전에 대해서는 자료가 많이 있습니다.\n저는 ubuntu 22 버전을 사용하며 ruby 버전으로 인한 오류가 발생했습니다.\n인스턴스가 ubuntu 22 버전이라면 다음과 같이 설치하시면 됩니다.</p>\n<p>참고 - <a href=\"https://github.com/aws/aws-codedeploy-agent/issues/301#issuecomment-1129912011\">https://github.com/aws/aws-codedeploy-agent/issues/301#issuecomment-1129912011</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> ruby-full ruby-webrick <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-y</span>\n<span class=\"token builtin class-name\">cd</span> /tmp\n<span class=\"token function\">wget</span> https://aws-codedeploy-ap-northeast-2.s3.ap-northeast-2.amazonaws.com/releases/codedeploy-agent_1.3.2-1902_all.deb\n<span class=\"token function\">mkdir</span> codedeploy-agent_1.3.2-1902_ubuntu22\ndpkg-deb <span class=\"token parameter variable\">-R</span> codedeploy-agent_1.3.2-1902_all.deb codedeploy-agent_1.3.2-1902_ubuntu22\n<span class=\"token function\">sed</span> <span class=\"token string\">'s/Depends:.*/Depends:ruby3.0/'</span> <span class=\"token parameter variable\">-i</span> ./codedeploy-agent_1.3.2-1902_ubuntu22/DEBIAN/control\ndpkg-deb <span class=\"token parameter variable\">-b</span> codedeploy-agent_1.3.2-1902_ubuntu22/\n<span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-i</span> codedeploy-agent_1.3.2-1902_ubuntu22.deb\nsystemctl list-units <span class=\"token parameter variable\">--type</span><span class=\"token operator\">=</span>service <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> codedeploy\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> codedeploy-agent status</code></pre></div>\n<br />\n<h3 id=\"6-github-action-스크립트-추가\" style=\"position:relative;\"><a href=\"#6-github-action-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B6%94%EA%B0%80\" aria-label=\"6 github action 스크립트 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. github action 스크립트 추가</h3>\n<p>github action 을 사용하기 위해 세 개의 스크립트가 필요합니다.</p>\n<ol>\n<li>githuc action 스크립트: CI 를 위한 스크립트입니다. s3 로 업로드 되기까지의 모든 과정입니다.</li>\n<li>appspec.yml: 빌드 파일을 어느 디렉토리로 전송할지, 배포 과정에서 실행하고 싶은 스크립트를 지정하는 스크립트입니다.</li>\n<li>after_install.yml: ec2 인스턴스가 s3 로 부터 빌드 파일을 전송 받은 후 실행하는 스크립트입니다.</li>\n</ol>\n<blockquote>\n<p>GITHUB - repository -> new workflow -> actions -> set up a workflow yourself</p>\n</blockquote>\n<p>githuc action workflow 예시입니다. 각 환경에 맞게 변경하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">name: CI\n\non:\n  push:\n    branches: <span class=\"token punctuation\">[</span> main <span class=\"token punctuation\">]</span>\n\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: checkout release\n      uses: actions/checkout@v3\n\n    - name: Package <span class=\"token function\">install</span>\n      run: <span class=\"token function\">yarn</span>\n\n    - name: Build\n      run: <span class=\"token function\">yarn</span> build\n\n    - name: <span class=\"token function\">zip</span> distributions\n      run: <span class=\"token function\">zip</span> <span class=\"token parameter variable\">-r</span> with-eat-build.zip  ./\n\n    - name: AWS configure credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: <span class=\"token variable\">${{ secrets.AWS_ACCESS_KEY_ID }</span><span class=\"token punctuation\">}</span>\n        aws-secret-access-key: <span class=\"token variable\">${{ secrets.AWS_SECRET_ACCESS_KEY }</span><span class=\"token punctuation\">}</span>\n        aws-region: ap-northeast-2\n\n    - name: upload to S3\n      run: aws s3 <span class=\"token function\">cp</span> <span class=\"token parameter variable\">--region</span> ap-northeast-2 ./with-eat-build.zip s3://with-eat-bucket/public/\n\n    - name: deploy with AWS codeDeploy\n      run: aws deploy create-deployment\n        --application-name with-eat-deploy\n        --deployment-config-name CodeDeployDefault.OneAtATime\n        --deployment-group-name with-eat-deploy-group\n        --s3-location <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span>with-eat-bucket,key<span class=\"token operator\">=</span>public/with-eat-build.zip,bundleType<span class=\"token operator\">=</span>zip</code></pre></div>\n<p>appspec.yml 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">version: <span class=\"token number\">0.0</span>\nos: linux\n\nfiles:\n  - source: /\n    destination: /var/www/html\n    overwrite: <span class=\"token function\">yes</span>\n\npermissions:\n  - object: /var/www/html\n    owner: root\n    group: root\n    mode: <span class=\"token number\">755</span>\n\nhooks:\n  AfterInstall:\n    - location: scripts/after_install.sh\n      timeout: <span class=\"token number\">60</span>\n      runas: root</code></pre></div>\n<p>after_install.sh 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">echo \"Project directory\"\ncd /var/www/html;\n\necho \"Project restart\"\npm2 kill &amp;&amp; pm2 start yarn --name yourappname -- start -p 3000 || echo 'Failed pm2 kill';</code></pre></div>\n<br />\n<h2 id=\"에러-발생시\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%EC%8B%9C\" aria-label=\"에러 발생시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 발생시</h2>\n<p>EC2 + S3 + Codedeploy + githubaction 이렇게 많은 서비스를 이용하다보니 버전, 권한, 전송 등 에러가 발생할겁니다.</p>\n<p>제가 주로 해결한 방법은</p>\n<ol>\n<li>github action 의 error log</li>\n<li>ec2 인스턴스 var/log/aws/codedeploy-agent/codedeploy-agent.log</li>\n</ol>\n<p>두 로그를 확인하는 것입니다.</p>\n<h3 id=\"에러-케이스\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EC%BC%80%EC%9D%B4%EC%8A%A4\" aria-label=\"에러 케이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 케이스</h3>\n<br />\n<blockquote>\n<p>Error: does not give you permission to perform operations in the following AWS service: AmazonEC2</p>\n</blockquote>\n<ul>\n<li>IAM 의 EC2 접근 권한 문제로 인해 S3 -> EC2 업로드가 안됨\n해결 방법: 다른 EC2 권한을 준다. 안되면, AmazonEC2FullAccess 정책 추가</li>\n</ul>\n<blockquote>\n<p>Error: CodeDeploy agent did not find an AppSpec file within the unpacked revision directory at revision-relative path “appspec.yml”</p>\n</blockquote>\n<ul>\n<li>빌드파일 내에 appspec.yml 파일을 찾지 못해서 오류가 발생함</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#github-action-\">github action ?</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">시작하기</a></p>\n<ul>\n<li><a href=\"#1-iam-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%B6%94%EA%B0%80\">1. IAM 사용자 추가</a></li>\n<li><a href=\"#2-s3-%EB%B2%84%ED%82%B7-%EC%83%9D%EC%84%B1\">2. S3 버킷 생성</a></li>\n<li><a href=\"#3-iam-%EC%97%AD%ED%95%A0-%EC%83%9D%EC%84%B1\">3. IAM 역할 생성</a></li>\n<li><a href=\"#4-codedeploy-%EB%B0%B0%ED%8F%AC-%EA%B7%B8%EB%A3%B9-%EB%B0%8F-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%83%9D%EC%84%B1\">4. Codedeploy 배포 그룹 및 애플리케이션 생성</a></li>\n<li><a href=\"#5-codedeploy-agent-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\">5. CodeDeploy agent 설치하기</a></li>\n<li><a href=\"#6-github-action-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B6%94%EA%B0%80\">6. github action 스크립트 추가</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%EC%8B%9C\">에러 발생시</a></p>\n<ul>\n<li><a href=\"#%EC%97%90%EB%9F%AC-%EC%BC%80%EC%9D%B4%EC%8A%A4\">에러 케이스</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 01, 2023","title":"aws ec2에 github action 으로 프론트 자동 배포하기","categories":"블로그 ci/cd","author":"vvs-kim","emoji":"💻"},"fields":{"slug":"/deploy-with-github-action-and-ec2/"}},"site":{"siteMetadata":{"siteUrl":"https://vvs-kim.github.io","comments":{"utterances":{"repo":"vvs-kim/vvs-kim.github.io"}}}}},"pageContext":{"slug":"/ssl-setting/","nextSlug":"/git-hooks-husky-with-eslint/","prevSlug":"/deploy-with-github-action-and-ec2/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}