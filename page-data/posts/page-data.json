{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"7ba9acd4-64b0-5866-814e-0d93dd9a50bd","excerpt":"에러 상황 Mac OS 환경에서 Mariadb 를 homebrew로 설치했습니다. 이후 spring 에서 작업 시 MySQL 커넥터를 사용해서 DB를 연동했습니다. 잘 사용하다가 파이썬을 설치한 이후로 해당 에러가 발생하고 JDBC DB 연동이 안됐습니다. 에러 원인 transaction_isolation 트랜잭션의 격리수준을 설정하는 변수입니다. 격리수준에 따라 다음처럼 나뉩니다. InnoDB의 기본 격리수준은 REPEATABLE READ 입니다. READ UNCOMMITTED READ COMMITTED REPEATEABLE READ SERIALIZABLE To determine the global and session transaction isolation levels at runtime, check the value of the tx_isolation system variable (note that the variable has been renamed transaction_i…","fields":{"slug":"/unknown-system-variable-transaction-isolation/"},"frontmatter":{"categories":"블로그 database","title":"Unknown system variable 'transaction_isolation'","date":"July 31, 2023"}},"next":{"fields":{"slug":"/namecheap-issue-ssl/"}},"previous":null},{"node":{"id":"88e9951b-a0bf-55f9-b806-859aa24b0a8a","excerpt":"포스팅 배경 Namecheap SSL 인증에 대한 자료 부족 Namecheap 사이트에서 생성한 SSL 인증서가 만료되어, https 적용을 위해 재발급 했습니다.\nNamecheap 에서 제공하는 문서만으로는 재발급이 쉽지 않아서 작성했습니다.\n이 게시물이 저와 같은 상황의 분들에게 도움이 되면 좋겠습니다.\n 순서 인증서 발행 인증서 다운로드 CNAME 등록 모든 인증서 파일을 단일 파일로 결합 Nginx 설정 확인 및 재실행  전체 과정 1. 인증서 발행 https://ap.www.namecheap.com/domains/ssl/detail/*CertificateID*/*PrimaryDomain*/dashboard 해당 페이지로 접속하거나, Namecheap 사이트에서 Domain List → Details → SSL → Details 로 이동합니다.\n(갱신하고자 하는 Domain 과 Certificate 선택) 만료된 CSR Code 를 복사합니다.\n만료된 CSR Code를 사용…","fields":{"slug":"/namecheap-issue-ssl/"},"frontmatter":{"categories":"블로그 web","title":"Namecheap SSL 인증서 재발급 후기 (Https 적용)","date":"October 05, 2022"}},"next":{"fields":{"slug":"/jenkins-deploy-with-github/"}},"previous":{"fields":{"slug":"/unknown-system-variable-transaction-isolation/"}}},{"node":{"id":"6de08e55-afd6-58e1-b067-bc30ccc747a3","excerpt":"포스팅 배경 Jenkins를 실무에서 왜 사용할까? 이전 직장에서 xshell, total commander 를 사용하여 수동으로 배포를 했었습니다.\n상당히 위험한 순간도 많았고, 실수한 적도 많았습니다.\n이에 대한 불편함을 느끼고, 현 직장에서는 자동 배포환경을 구축했습니다.\n이로 인해 동료 개발자도 배포가 쉬워지는 장점을 느꼈습니다. 기억보단 기록 Jenkins 환경 구축을 4번했습니다.\n잦은 장비 변경으로 인해 window, linux, mac, docker 등 각 OS에 모두 설치할 때마다\n이전 과정이 기억나지 않았고, 많은 시간을 소비했습니다.\n기록에 대한 필요성을 느꼈고, 저와 같은 불편함을 겪는 분들에게 도움이 되면 좋겠습니다. 순서 Jenkins 설치 및 계정 설정 Jenkins - github 계정 연동 설정 프로젝트 생성 프로젝트 - github repository 연동 설정 플러그인 설치, 설정(ex. node, publish over ssh) Build ste…","fields":{"slug":"/jenkins-deploy-with-github/"},"frontmatter":{"categories":"블로그 ci/cd","title":"Jenkins 자동 배포하기 (+github 연동)","date":"August 27, 2022"}},"next":{"fields":{"slug":"/vue-cors-error/"}},"previous":{"fields":{"slug":"/namecheap-issue-ssl/"}}},{"node":{"id":"66ae95ed-8773-50ec-a40b-2729a1e722fe","excerpt":"​ 에러 배경 vue 에서 kakao map api 를 사용하여 지도에서 맛집(장소)을 검색했다. 주소 이외의 장소에 대한 상세정보가 필요했다. 카카오 플레이스 (map.place.kakao) 로 장소에 대한 정보를 조회 요청했다. Cors Error 발생\n​ 에러 발생 이유 로컬 주소(localhost:8000) 와 조회하려는 주소(map.place.kakao:443) 의 출처가 다르다. ​ CORS Error (Cross-Origin Resource Sharing) 간단히 말해서, 브라우저에서 요청하는 주소와 응답하는 주소(출처)가 다를 때 허락한 요청 외에는 에러를 발생시키겠다. ​ ex) 둘을 비교하면 프로토콜(http) 와 호스트(loaclhost), 포트(8000) 모두 다르다. 에러 발생 요청하는 주소: http :// localhost : 8000 응답하는 주소: https :// map.place.kakao : 443\n​ 허락한 요청이란? 출처가 다르더라도 요청을 …","fields":{"slug":"/vue-cors-error/"},"frontmatter":{"categories":"블로그 web","title":"CORS Error [ vue 에서 외부 API 요청 시 ]","date":"August 04, 2022"}},"next":{"fields":{"slug":"/www-google-com-search/"}},"previous":{"fields":{"slug":"/jenkins-deploy-with-github/"}}},{"node":{"id":"54df58f3-e6a7-5e77-9cee-003d9cdd6c62","excerpt":"www.google.com을 검색 시 화면이 출력되는 과정 사용자가 주소창에 구글 주소를 입력한다. (https://www.google.com) DNS에서 도메인 주소에 해당하는 IP 주소를 찾는다. 브라우저가 서버와 TCP connection을 한다. 브라우저가 서버에 HTTP 요청을 한다. 서버가 HTTP 응답을 보낸다. html 파일과 CSS 파일을 각각 파싱 하여 DOM, CSSOM Tree를 만든다. (Parsing) DOM Tree 와 CSSOM Tree를 결합하여 Render Tree를 만든다. Render Tree에서 각 노드의 위치와 크기를 계산한다. (Layout) Layout 단계에서 계산된 값을 여러 Layer로 나눠 픽셀을 채워 넣는다. (Painting) 여러 Layer로 나누어진 픽셀들을 우리가 보는 화면처럼 합성해 준다. (Composite) 15 번은 통신과 관련된 과정이고,\n611 번은 화면이 어떻게 그려지는지(렌더링)에 대한 과정입니다. 본 게시물…","fields":{"slug":"/www-google-com-search/"},"frontmatter":{"categories":"블로그 web","title":"www.google.com을 검색 시 발생하는 일 - [ 브라우저 렌더링 ]","date":"August 04, 2022"}},"next":{"fields":{"slug":"/single-page-application-2/"}},"previous":{"fields":{"slug":"/vue-cors-error/"}}},{"node":{"id":"26d667eb-e403-5729-91e2-f7c70f6449d8","excerpt":"안녕하세요.\n이번 게시물은 이전 게시물 [SPA - 등장 배경]의 다음 편입니다.\n이전 게시물에서는 SPA가 등장한 배경, MPA와 차이점을 소개했습니다. SPA는 하나의 페이지를 서버로부터 받아와 브라우저에서 렌더링을 하며 내용을 채웁니다.\n이는 CSR과 궁합이 맞으며, 실제로 SPA + CSR로 많이 사용됩니다.\n반면 MPA는 문서에 대한 처리를 서버에서 전적으로 하므로, SSR과 궁합이 맞습니다. 따라서, 이번 게시물에서는 SPA/MPA 원리와 연관이 있는 CSR/SSR에 대해 소개하려 합니다. ﻿CSR(Client Side Rendering) 클라이언트에서 렌더링을 하는 것 클라이언트는 빈 껍데기의 index.html을 받고, 추가로 서버로부터 js 파일을 다운로드합니다. 추가로 필요한 데이터는 서버에 요청해서 데이터를 받은 다음에 동적으로 html을 생성합니다. 장점 페이지를 전환하는 과정에서 링크로 이동하는 것이기 아니기 때문에 깜빡임이 없으므로 사용자 친화적이다. 서버…","fields":{"slug":"/single-page-application-2/"},"frontmatter":{"categories":"블로그 web","title":"SPA(Single Page Application) - [2] CSR/SSR","date":"August 04, 2022"}},"next":{"fields":{"slug":"/err-connection-refused/"}},"previous":{"fields":{"slug":"/www-google-com-search/"}}},{"node":{"id":"e1f09876-14d1-5947-bf9d-7380f8a0f0cf","excerpt":"에러 배경 node js 를 AWS 서버 에 배포했다. 웹 화면에서 api 요청 시 ‘사이트에 연결할 수 없음’ 에러 확인 ​ 에러 발생 이유 방화벽이 원인이었다. http 프로토콜과 포트를 열어주지 않아서 응답을 주지 않았다. ​ 에러 해결 과정 1. AWS 인바운드 규칙 확인 Instance 의 보안 그룹에 대한 포트를 열어줬는지 확인한다. ​ 2. 해당 포트가 실행되는 지 확인 netstat -tnlp 해당 포트가 실행되는 지 알 수 있다. ​ 3. 방화벽 허용하기 firewall-cmd —permanent —add-service=http firewall-cmd —permanent —add-service=https firewall-cmd —permanent —add-port=9000/tcp ​ 과거에 허용한 적이 없다면 success 과거에 허용한 적이 있다면 경고가 뜬다. 에러 배경 에러 발생 이유 에러 해결 과정 1. AWS 인바운드 규칙 확인 2. 해당 포트가 실행되는 …","fields":{"slug":"/err-connection-refused/"},"frontmatter":{"categories":"블로그 server","title":"AWS EC2 Node.js 서버 연결 안될 때 ( 사이트에 연결할 수 없음 )","date":"August 04, 2022"}},"next":{"fields":{"slug":"/single-page-application-1/"}},"previous":{"fields":{"slug":"/single-page-application-2/"}}},{"node":{"id":"62287063-6f02-5d40-bad7-0fbf19df2de0","excerpt":"많은 웹 프론트엔드 개발자가 React, vue, angular 프레임워크를 사용하여 개발한다.\n이들은 모두 SPA 프레임워크이다. 그런데 SPA는 뭘까?\nSPA를 설명하기 앞서, SPA는 모던 웹의 패러다임이라고 한다.\n과거 웹 페이지에 대비해 어떠한 목적으로 SPA를 사용하기 시작한 지 알아봤다. 1. 서버의 부하 감소 과거의 웹 페이지 형태(MPA, Multi Page Application)에서는 사용자가 메뉴를 클릭 시,\n완전히 새로운 페이지를 서버에서 전송해 줬다.\n서버에서 다음과 같은 작업이 이루어졌다. 사용자에게 요청이 들어오면, DB로부터 데이터를 가져온다. ASP, JSP, PHP 같은 파일에 데이터를 넣어준 후 HTML 형태화 시켜서 전송해 준다.\n​ 과거의 웹 페이지에서 브라우저는 화면을 보여주기만 할 뿐,\n요청한 웹 문서에 대한 처리는 전부 서버에서 담당한 것으로 보인다.\n즉, 페이지가 요청될 때마다 서버에 부하가 생긴다.\n​\nSPA는 웹 애플리케이션에 필요한…","fields":{"slug":"/single-page-application-1/"},"frontmatter":{"categories":"블로그 web","title":"SPA(Single Page Application) - [1] 등장 배경","date":"May 01, 2022"}},"next":null,"previous":{"fields":{"slug":"/err-connection-refused/"}}}],"categories":["All","블로그","database","web","ci/cd","server"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}