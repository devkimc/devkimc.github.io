{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/server","result":{"pageContext":{"currentCategory":"server","categories":["All","블로그","java","db","server","spring","ci/cd","docker","web","frontend"],"edges":[{"node":{"id":"8de7e380-0b40-51f3-8821-8375fa969e0b","excerpt":"🤔 적용 이유 AutoScaling, LoadBalancer EB를 사용해본 적은 없으나 사용율이 증가하면 scale out 했다가, 다시 줄어들면 scale in 을 할 수 있는 AutoScaling Group과 서버의 부하를 나누어 주는 LoadBalancer를 간편하게 설정할 수 있는 점이 장점으로 느껴졌습니다.\n다른 여러 장점은 사용해보기 전에는 와닿지 않아서 ‘사용해보고 느껴보자’ 해서 사용했습니다. ⚙️ 설정 방법 1. IAM 역할 추가 Elastic beanstalk(이하 EB) 의 환경을 구성하기 위해 각 역할에 권한이 필요합니다. 1.1 서비스 역할 EB를 서비스로 사용하므로 담당할 IAM 역할을 부여합니다.\nElastic Beanstalk 서비스 역할 관리  설정하지 않을 시, 다음과 같은 에러를 만나게 됩니다.. Configuration validation exception: Invalid option specification (Namespace: ‘aws:ela…","fields":{"slug":"/java-deploy-with-elastic-beanstalk-and-docker/"},"frontmatter":{"categories":"블로그 server","title":"Elastic Beanstalk + Docker + Java 설정","date":"June 19, 2023"}},"next":{"fields":{"slug":"/could-not-safety-identify-store-assignment-for-repository/"}},"previous":{"fields":{"slug":"/unknown-system-variable-transaction-isolation/"}}},{"node":{"id":"f19dded4-c101-5bb3-bc6e-c0919f94e06c","excerpt":"root 접속하는 이유 Ec2 인스턴스 생성 시 ubuntu 계정으로 접속할 수 있습니다.\n패키지를 설치하거나 쉘 스크립트를 실행할 때 sudo 를 사용하는 불편함을 줄이기 위함입니다.\n 설정방법 1. 초기 비밀번호 설정 2. ssh 설정 root 비밀번호 로그인 허용 시\nPermitRootLogin yes root ssh 접속만 허용 시\nPermitRootLogin prohibit-password private key 내용 확인 및 접속하기 위한 private key 를 추가\n이렇게 설정하면 접속이 가능합니다. 에러 발생 시 authentication refused: bad ownership or modes for file /root/.ssh/authorized_keys ubuntu 계정으로 root 계정의 인증파일을 수정시 발생하는 오류입니다.\nroot 폴더의 파일은 root 계정으로 작성 및 수정합니다. root 접속하는 이유 설정방법 1. 초기 비밀번호 설정 2. ssh 설…","fields":{"slug":"/ubuntu-connect-with-root-credential/"},"frontmatter":{"categories":"블로그 server","title":"Ubuntu 환경에서 root 사용자로 ssh 접속하기","date":"January 01, 2023"}},"next":{"fields":{"slug":"/deploy-with-github-action-and-ec2/"}},"previous":{"fields":{"slug":"/nextjs-deploy-with-docker-1/"}}},{"node":{"id":"aea1bb0e-a0f7-5e04-b212-68c9a6f0bdd8","excerpt":"1 - git 접속 에러 새로운 노트북을 이용할 때 github, gitlab 에 처음 계정을 연동해서 이용할 때 https remote 주소로 부터 깃을 관리할 때 권한 에러를 마주할 수 있습니다.\n이에 대한 반복된 검색을 줄이면 좋을 거 같아서 포스팅을 시작합니다. github 에러 올바른 사용자 이름과 비밀번호를 입력했을 때 에러가 발생합니다.\n가끔 마주하는 문구인데 읽어보면, 2021년 8월 13일 부터 비밀번호 인증지원은 제거됐다. 라고 나와 있고, 어떻게 적용할 지 링크를 알려줍니다.\nhttps 리모트를 적용하면 기본적으로 깃계정의 아이디와 패스워드를 입력합니다.\n패스워드 인증을 지원하지 않는다고 하니 ssh 접속을 하는 방법이 필요합니다. 2 - git ssh 접속 방법 2.1 - ssh key 생성 우선, ssh-keygen 이 설치되어 있어야 합니다.\nhttps://git-scm.com/book/ko/v2/Git-%EC%84%9C%EB%B2%84-SSH-%EA%B3…","fields":{"slug":"/git-ssh-connect/"},"frontmatter":{"categories":"블로그 server","title":"git ssh 접속하기","date":"December 03, 2022"}},"next":{"fields":{"slug":"/airbnb-eslint-setting/"}},"previous":{"fields":{"slug":"/git-hooks-husky-with-eslint/"}}},{"node":{"id":"e1f09876-14d1-5947-bf9d-7380f8a0f0cf","excerpt":"에러 배경 node js 를 AWS 서버 에 배포했다. 웹 화면에서 api 요청 시 ‘사이트에 연결할 수 없음’ 에러 확인 ​ 에러 발생 이유 방화벽이 원인이었다. http 프로토콜과 포트를 열어주지 않아서 응답을 주지 않았다. ​ 에러 해결 과정 1. AWS 인바운드 규칙 확인 Instance 의 보안 그룹에 대한 포트를 열어줬는지 확인한다. ​ 2. 해당 포트가 실행되는 지 확인 netstat -tnlp 해당 포트가 실행되는 지 알 수 있다. ​ 3. 방화벽 허용하기 firewall-cmd —permanent —add-service=http firewall-cmd —permanent —add-service=https firewall-cmd —permanent —add-port=9000/tcp ​ 과거에 허용한 적이 없다면 success 과거에 허용한 적이 있다면 경고가 뜬다. 에러 배경 에러 발생 이유 에러 해결 과정 1. AWS 인바운드 규칙 확인 2. 해당 포트가 실행되는 …","fields":{"slug":"/err-connection-refused/"},"frontmatter":{"categories":"블로그 server","title":"AWS EC2 Node.js 서버 연결 안될 때 ( 사이트에 연결할 수 없음 )","date":"August 04, 2022"}},"next":{"fields":{"slug":"/single-page-application-1/"}},"previous":{"fields":{"slug":"/www-google-com-search/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}